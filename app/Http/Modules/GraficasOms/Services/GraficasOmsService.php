<?php

namespace App\Http\Modules\GraficasOms\Services;

use App\Http\Modules\GraficasOms\Repositories\GraficasOmsRepository;
use Carbon\Carbon;
use Illuminate\Support\Facades\Http;
use InvalidArgumentException;

class GraficasOmsService
{
    protected $graficasOmsRepository;

    public function __construct(GraficasOmsRepository $graficasOmsRepository)
    {
        $this->graficasOmsRepository = $graficasOmsRepository;
    }

    private function generarPdfDesdeGrafica($chartConfig, $nombreImagen)
    {
        $url = "https://quickchart.io/chart";

        $chartConfigJson = json_encode($chartConfig, JSON_UNESCAPED_SLASHES | JSON_UNESCAPED_UNICODE);
        $chartConfigJson = preg_replace('/"__FUNC__(.*?)__ENDFUNC__"/s', '$1', $chartConfigJson);
        $chartConfigJson = str_replace('\"', '"', $chartConfigJson);
        $chartConfigJson = str_replace(
            '"function(value) { return Number.isInteger(value) ? value : \\"\\"; }"',
            'function(value) { return Number.isInteger(value) ? value : ""; }',
            $chartConfigJson
        );

        // NO MODIFICAR TAMAÑO DE LA GRAFICA YA QUE PRESENTARÁ COSTO EN QUICKCHART
        $response = Http::asJson()->post($url, [
            'chart' => $chartConfigJson,
            'width' => 500,
            'height' => 500,
        ]);

        $carpeta = public_path('graficasOms');

        // Crear carpeta si no existe
        if (!file_exists($carpeta)) {
            mkdir($carpeta, 0777, true);
        }
        $imagePath = $carpeta . '/' . $nombreImagen;
        file_put_contents($imagePath, $response->body());
    }

    //GRAFICAS PESO PARA LA TALLA
    public function generarGraficaPesoTalla($request)
    {
        $peso = $request->peso;
        $altura = $request->talla ?? $request->altura;
        $afiliadoId = $request->afiliadoId;
        $edad = $request->edad;
        $sexo = $request->sexo;
        $graficaHistoria = $request->graficasHistoria;
        $consultaId = $request->consultaId;
        $datos = $this->graficasOmsRepository->obtenerDatos($afiliadoId, $consultaId);

        if ($peso != null && $altura != null && $datos != null) {

            if ($edad >= 0 && $edad <= 60) {

                $longitudes = [];
                $pesosZ3 =  [];
                $pesosZ2 =  [];
                $pesosZ1 =  [];
                $pesosZ0 =  [];
                $pesosZ_1 = [];
                $pesosZ_2 = [];
                $pesosZ_3 = [];
                $ticksX = [];
                $ticksY = [];
                $peso = (float)$peso;
                $altura = (float)$altura;

                function curva($base, $desviacion)
                {
                    return array_map(fn($v) => round($v + $desviacion, 1), $base);
                }

                if ($edad >= 0 && $edad <= 24) {
                    $ticksX = [
                        'min' => 45,
                        'max' => 110,
                        'stepSize' => 1.25,
                        'callback' => '__FUNC__function(value) { return Number.isInteger(value) ? value : ""; }__ENDFUNC__'
                    ];
                } else {
                    $ticksX = [
                        'min' => 65,
                        'max' => 120,
                        'stepSize' => 1.25,
                        'callback' => '__FUNC__function(value) { return Number.isInteger(value) ? value : ""; }__ENDFUNC__'
                    ];
                }

                if ($edad >= 0 && $edad <= 24) {
                    $ticksY = [
                        'min' => 1,
                        'max' => 26,
                        'stepSize' => 0.5,
                        'callback' => '__FUNC__function(value) { return Number.isInteger(value) ? value : ""; }__ENDFUNC__'
                    ];
                } else {
                    $ticksY = [
                        'min' => 5,
                        'max' => 32,
                        'stepSize' => 0.5,
                        'callback' => '__FUNC__function(value) { return Number.isInteger(value) ? value : ""; }__ENDFUNC__'
                    ];
                }

                if ($edad >= 0 && $edad <= 24 && $sexo == "M") {
                    // PESO PARA LA TALLA 0 A 2 AÑOS (NIÑ0S)
                    $longitudes = [45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 105, 110];

                    $pesosZ3 =  [3.4, 4.5, 6.0, 7.9, 9.5, 11.0, 12.4, 13.5, 14.9, 16.4, 18.0, 19.5, 21.8, 24.0];
                    $pesosZ2 =  [3.0, 4.0, 5.4, 7.1, 8.6, 10.0, 11.3, 12.4, 13.5, 15.0, 16.4, 18.0, 19.8, 21.9];
                    $pesosZ1 =  [2.8, 3.6, 5.0, 6.5, 7.9, 9.1, 10.4, 11.4, 12.5, 13.8, 15.0, 16.5, 18.0, 20.0];
                    $pesosZ0 =  [2.5, 3.4, 4.5, 6.0, 7.3, 8.4, 9.5, 10.5, 11.5, 12.7, 13.9, 15.1, 16.6, 18.3];
                    $pesosZ_1 = [2.2, 3.0, 4.1, 5.5, 6.6, 7.7, 8.7, 9.6, 10.5, 11.8, 12.8, 14.0, 15.3, 16.7];
                    $pesosZ_2 = [2.0, 2.8, 3.8, 5.0, 6.1, 7.1, 8.0, 8.9, 9.8, 10.9, 11.9, 13.0, 14.0, 15.4];
                    $pesosZ_3 = [1.8, 2.5, 3.5, 4.7, 5.7, 6.5, 7.5, 8.2, 9.0, 10.0, 11.0, 12.0, 13.0, 14.1];
                }

                if ($edad > 24 && $edad <= 60 && $sexo == "M") {
                    // PESO PARA LA TALLA 2 A 5 AÑOS (NIÑ0S)
                    $longitudes = [65, 70, 75, 80, 85, 90, 95, 100, 105, 110, 115, 120];

                    $pesosZ3  = [9.6, 11.0, 12.5, 13.8, 15.0, 16.5, 18.0, 20.0, 22.0, 24.4, 27.0, 30.0];
                    $pesosZ2  = [8.9, 10.1, 11.5, 12.5, 13.9, 15.1, 16.5, 18.0, 20.0, 22.1, 24.5, 27.0];
                    $pesosZ1  = [8.1, 9.4, 10.5, 11.5, 12.6, 14.0, 15.2, 16.7, 18.4, 20.2, 22.4, 24.5];
                    $pesosZ0  = [7.5, 8.5, 9.6, 10.5, 11.6, 12.9, 14.0, 15.4, 16.9, 18.5, 20.4, 22.3];
                    $pesosZ_1 = [6.9, 7.9, 8.9, 9.8, 10.7, 11.9, 13.0, 14.1, 15.5, 17.0, 18.6, 20.4];
                    $pesosZ_2 = [6.4, 7.3, 8.2, 9.0, 10.0, 11.0, 12.0, 13.0, 14.3, 15.6, 17.0, 18.5];
                    $pesosZ_3 = [5.9, 6.8, 7.5, 8.4, 9.2, 10.2, 11.1, 12.0, 13.1, 14.4, 15.7, 17.0];
                }

                if ($edad >= 0 && $edad <= 24 && $sexo == "F") {
                    // PESO PARA LA TALLA 0 A 2 AÑOS (NIÑAS)
                    $longitudes = [45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 105, 110];

                    $pesosZ3 =  [3.4, 4.5, 6.0, 7.9, 9.5, 10.9, 12.1, 13.4, 14.9, 16.5, 18.2, 20.0, 22.1, 24.6];
                    $pesosZ2 =  [3.0, 4.0, 5.5, 7.1, 8.5, 9.8, 11.0, 12.0, 13.5, 15.0, 16.5, 18.0, 20.0, 22.1];
                    $pesosZ1 =  [2.7, 3.6, 5.0, 6.5, 7.7, 9.0, 10.0, 11.0, 12.3, 13.6, 15.0, 16.5, 18.1, 20.1];
                    $pesosZ0 =  [2.5, 3.4, 4.5, 5.9, 7.0, 8.1, 9.1, 10.0, 11.2, 12.5, 13.7, 15.0, 16.5, 18.3];
                    $pesosZ_1 = [2.3, 3.1, 4.2, 5.4, 6.5, 7.5, 8.4, 9.2, 10.3, 11.4, 12.5, 13.7, 15.0, 16.7];
                    $pesosZ_2 = [2.1, 2.7, 3.8, 4.9, 6.0, 6.9, 7.7, 8.5, 9.4, 10.5, 11.5, 12.6, 13.9, 15.2];
                    $pesosZ_3 = [1.9, 2.6, 3.5, 4.5, 5.5, 6.3, 7.0, 7.8, 8.7, 9.6, 10.5, 11.5, 12.7, 14.0];
                }

                if ($edad > 24 && $edad <= 60 && $sexo == "F") {

                    // PESO PARA LA TALLA 2 A 5 AÑOS (NIÑAS)
                    $longitudes = [65, 70, 75, 80, 85, 90, 95, 100, 105, 110, 115, 120];

                    $pesosZ3  = [9.7, 10.9, 12.1, 13.3, 14.7, 16.2, 17.9, 19.7, 21.7, 24.0, 26.5, 29.2];
                    $pesosZ2  = [8.8, 10.0, 11.1, 12.2, 13.4, 14.8, 16.3, 17.9, 19.7, 21.7, 24.0, 26.5];
                    $pesosZ1  = [8.0, 9.1, 10.1, 11.1, 12.3, 13.6, 15.0, 16.4, 18.0, 19.9, 22.0, 24.3];
                    $pesosZ0  = [7.3, 8.3, 9.3, 10.2, 11.2, 12.4, 13.6, 14.9, 16.4, 18.1, 20.0, 22.0];
                    $pesosZ_1 = [6.6, 7.6, 8.5, 9.4, 10.3, 11.3, 12.4, 13.6, 15.0, 16.6, 18.3, 20.1];
                    $pesosZ_2 = [6.0, 6.9, 7.7, 8.5, 9.4, 10.3, 11.3, 12.4, 13.6, 15.0, 16.6, 18.3];
                    $pesosZ_3 = [5.5, 6.3, 7.0, 7.8, 8.6, 9.5, 10.4, 11.4, 12.6, 13.9, 15.3, 16.8];
                }

                $bandasZ = [
                    '+3' => $pesosZ3,
                    '+2' => $pesosZ2,
                    '+1' => $pesosZ1,
                    '0' => $pesosZ0,
                    '-1' => $pesosZ_1,
                    '-2' => $pesosZ_2,
                    '-3' => $pesosZ_3,
                ];
                function interpolarPeso($tallaPaciente, $longitudes, $pesos)
                {
                    for ($i = 0; $i < count($longitudes) - 1; $i++) {
                        $x1 = $longitudes[$i];
                        $x2 = $longitudes[$i + 1];

                        if ($tallaPaciente >= $x1 && $tallaPaciente <= $x2) {
                            $y1 = $pesos[$i];
                            $y2 = $pesos[$i + 1];

                            $pendiente = ($y2 - $y1) / ($x2 - $x1);
                            return $y1 + $pendiente * ($tallaPaciente - $x1);
                        }
                    }

                    if ($tallaPaciente < $longitudes[0]) return $pesos[0];
                    if ($tallaPaciente > $longitudes[count($longitudes) - 1]) return $pesos[count($longitudes) - 1];
                }


                function clasificarPesoTallaInterpolado($tallaPaciente, $pesoPaciente, $longitudes, $bandasZ)
                {
                    $valoresZ = [];
                    foreach ($bandasZ as $z => $pesos) {
                        $valoresZ[$z] = interpolarPeso($tallaPaciente, $longitudes, $pesos);
                    }

                    if ($pesoPaciente >= $valoresZ['+3']) {
                        return 'Obesidad - >=Z+3';
                    } elseif ($pesoPaciente >= $valoresZ['+2'] && $pesoPaciente < $valoresZ['+3']) {
                        return 'Sobrepeso - >=Z+2 a <Z+3';
                    } elseif ($pesoPaciente >= $valoresZ['+1'] && $pesoPaciente < $valoresZ['+2']) {
                        return 'Riesgo Sobrepeso - >=Z+1 a <Z+2';
                    } elseif ($pesoPaciente >= $valoresZ['-1'] && $pesoPaciente < $valoresZ['+1']) {
                        return 'Adecuado para Talla - >=Z-1 a <Z+1';
                    } elseif ($pesoPaciente >= $valoresZ['-2'] && $pesoPaciente < $valoresZ['-1']) {
                        return 'Riesgo Desnutrición Aguda - >=Z-2 a <Z-1';
                    } elseif ($pesoPaciente >= $valoresZ['-3'] && $pesoPaciente < $valoresZ['-2']) {
                        return 'Desnutrición Aguda Moderada - >=Z-3 a <Z-2';
                    } elseif ($pesoPaciente < $valoresZ['-3']) {
                        return 'Desnutrición Aguda Severa - <Z-3';
                    } else {
                        return 'Sin Clasificación';
                    }
                }
                if ($graficaHistoria != true) {
                    $intersecciones = $datos->map(function ($item) use ($longitudes, $bandasZ) {
                        $clasificacion = clasificarPesoTallaInterpolado(
                            (float)$item['talla'],
                            (float)$item['peso'],
                            $longitudes,
                            $bandasZ
                        );
                        return [
                            'x' => (float) $item['talla'],
                            'y' => (float) $item['peso'],
                            'fecha' => $item['hora_fin_atendio_consulta'],
                            'clasificacion' => $clasificacion,
                        ];
                    })->values()->all();
                } else {
                    $clasificacion = clasificarPesoTallaInterpolado(
                        (float) $altura,
                        (float) $peso,
                        $longitudes,
                        $bandasZ
                    );
                    $intersecciones = $clasificacion;
                }
                $chartConfig = [
                    'type' => 'line',
                    'data' => [
                        'datasets' => [
                            [
                                'label' => 'Intersección',
                                'data' => $intersecciones,
                                'pointBackgroundColor' => 'blue',
                                'pointRadius' => 2,
                                'showLine' => true,
                                'borderDash' => [5, 5],
                                'fill' => false,
                                'datalabels' => [
                                    'display' => true,
                                    'align' => 'top',
                                    'anchor' => 'end',
                                    'color' => 'black',
                                    'rotation' => -90,
                                    'font' => [
                                        'weight' => 'bold',
                                        'size' => 10,
                                    ],
                                    'formatter' => "__FUNC__function(value) { return value.fecha; }__ENDFUNC__",

                                ],
                            ],
                            [
                                'label' => 'Z-3',
                                'data' => array_map(function ($x, $y) {
                                    return ['x' => $x, 'y' => $y];
                                }, $longitudes, $pesosZ_3),
                                'borderColor' => 'red',
                                'borderWidth' => 2,
                                'fill' => false,
                                'pointRadius' => 0,
                            ],
                            [
                                'label' => 'Z-2',
                                'data' => array_map(function ($x, $y) {
                                    return ['x' => $x, 'y' => $y];
                                }, $longitudes, $pesosZ_2),
                                'borderColor' => 'red',
                                'borderDash' => [5, 5],
                                'borderWidth' => 2,
                                'fill' => false,
                                'pointRadius' => 0
                            ],
                            [
                                'label' => 'Z-1',
                                'data' => array_map(function ($x, $y) {
                                    return ['x' => $x, 'y' => $y];
                                }, $longitudes, $pesosZ_1),
                                'borderColor' => 'orange',
                                'borderWidth' => 2,
                                'fill' => false,
                                'pointRadius' => 0
                            ],
                            [
                                'label' => 'Z-0',
                                'data' => array_map(function ($x, $y) {
                                    return ['x' => $x, 'y' => $y];
                                }, $longitudes, $pesosZ0),
                                'borderColor' => 'green',
                                'borderWidth' => 2,
                                'fill' => false,
                                'pointRadius' => 0
                            ],
                            [
                                'label' => 'Z+1',
                                'data' => array_map(function ($x, $y) {
                                    return ['x' => $x, 'y' => $y];
                                }, $longitudes, $pesosZ1),
                                'borderColor' => 'orange',
                                'borderWidth' => 2,
                                'fill' => false,
                                'pointRadius' => 0
                            ],
                            [
                                'label' => 'Z+2',
                                'data' => array_map(function ($x, $y) {
                                    return ['x' => $x, 'y' => $y];
                                }, $longitudes, $pesosZ2),
                                'borderColor' => 'orangered',
                                'borderDash' => [5, 5],
                                'borderWidth' => 2,
                                'fill' => false,
                                'pointRadius' => 0
                            ],
                            [
                                'label' => 'Z+3',
                                'data' => array_map(function ($x, $y) {
                                    return ['x' => $x, 'y' => $y];
                                }, $longitudes, $pesosZ3),
                                'borderColor' => 'red',
                                'borderWidth' => 2,
                                'fill' => false,
                                'pointRadius' => 0
                            ]
                        ]
                    ],
                    'options' => [
                        'plugins' => [
                            'datalabels' => [
                                'display' => false,
                            ],
                        ],
                        'legend' => [
                            'display' => false,
                        ],
                        'title' => [
                            'display' => true,
                            'text' => 'Curvas de crecimiento: Peso para la talla',
                        ],
                        'scales' => [
                            'xAxes' => [[
                                'type' => 'linear',
                                'position' => 'bottom',
                                'scaleLabel' => [
                                    'display' => true,
                                    'labelString' => 'Longitud (cm)'
                                ],
                                'ticks' => $ticksX,
                                'gridLines' => [
                                    'drawTicks' => true,
                                    'color' => 'rgba(0, 0, 0, 0.1)',
                                    'lineWidth' => 0.5
                                ]
                            ]],
                            'yAxes' => [[
                                'scaleLabel' => [
                                    'display' => true,
                                    'labelString' => 'Peso (kg)'
                                ],
                                'ticks' => $ticksY,
                                'gridLines' => [
                                    'drawTicks' => true,
                                    'color' => 'rgba(0, 0, 0, 0.1)',
                                    'lineWidth' => 0.5
                                ]
                            ]]
                        ]
                    ]
                ];
                $nombreImagen = 'graficaPesoTalla.png';
                if ($graficaHistoria == false) {
                    $this->generarPdfDesdeGrafica($chartConfig, $nombreImagen);
                }
                return $intersecciones;
            }
        }
    }

    // GRAFICAS TALLA PARA LA EDAD
    public function generarGraficaTallaEdad($request)
    {
        $peso = $request->peso;
        $altura = $request->talla ?? $request->altura;
        $afiliadoId = $request->afiliadoId;
        $edad = $request->edad;
        $sexo = $request->sexo;
        $fechaNacimiento = $request->fechaNacimiento;
        $graficaHistoria = $request->graficasHistoria;
        $consultaId = $request->consultaId;
        $datos = $this->graficasOmsRepository->obtenerDatos($afiliadoId, $consultaId);

        if ($altura != null && $edad != null && $datos != null) {

            $longitudes = [];
            $pesosZ2 =  [];
            $pesosZ1 =  [];
            $pesosZ0 =  [];
            $pesosZ_1 = [];
            $pesosZ_2 = [];
            $ticksX = [];
            $ticksY = [];
            $peso = (float)$peso;
            $altura = (float)$altura;

            if ($edad >= 0 && $edad <= 24) {
                $ticksX = [
                    'min' => 0,
                    'max' => 24,
                    'stepSize' => 1,
                    'callback' => '__FUNC__function(value) { return Number.isInteger(value) ? value : ""; }__ENDFUNC__'
                ];
            } else if ($edad > 24 && $edad <= 60) {
                $ticksX = [
                    'min' => 24,
                    'max' => 60,
                    'stepSize' => 1,
                    'callback' => '__FUNC__function(value) { return Number.isInteger(value) ? value : ""; }__ENDFUNC__'
                ];
            } else {
                $ticksX = [
                    'min' => 61,
                    'max' => 228,
                    'stepSize' => 1,
                    'callback' => '__FUNC__function(value) { return Number.isInteger(value) ? value : ""; }__ENDFUNC__'
                ];
            }

            if ($edad >= 0 && $edad <= 24) {
                $ticksY = [
                    'min' => 40,
                    'max' => 100,
                    'stepSize' => 1,
                    'callback' => '__FUNC__function(value) { return Number.isInteger(value) ? value : ""; }__ENDFUNC__'
                ];
            } else if ($edad > 24 && $edad <= 60) {
                $ticksY = [
                    'min' => 75,
                    'max' => 125,
                    'stepSize' => 1,
                    'callback' => '__FUNC__function(value) { return Number.isInteger(value) ? value : ""; }__ENDFUNC__'
                ];
            } else {
                $ticksY = [
                    'min' => 90,
                    'max' => 210,
                    'stepSize' => 1,
                    'callback' => '__FUNC__function(value) { return Number.isInteger(value) ? value : ""; }__ENDFUNC__'
                ];
            }
            // Curvas derivadas
            function curvaGrafica($base, $desviacion)
            {
                return array_map(fn($v) => round($v + $desviacion, 1), $base);
            }

            // TALLA PARA LA EDAD 0 A 2 AÑOS (NIÑOS)
            if ($edad >= 0 && $edad <= 24 && $sexo == "M") {
                $longitudes = [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24];

                $pesosZ2  = [54.0, 62.2, 68.0, 72.0, 75.3, 78.0, 80.5, 83.0, 85.5, 87.9, 90.0, 92.0, 94.0];
                $pesosZ1  = [52.0, 60.2, 66.0, 69.9, 73.0, 75.7, 78.0, 80.3, 82.8, 85.0, 87.0, 89.0, 90.9];
                $pesosZ0  = [50.0, 58.5, 64.0, 67.8, 70.8, 73.3, 75.9, 78.0, 80.0, 82.2, 84.1, 86.0, 88.0];
                $pesosZ_1 = [48.0, 56.5, 61.9, 65.5, 68.4, 71.0, 73.4, 75.6, 77.5, 79.6, 81.4, 83.0, 84.8];
                $pesosZ_2 = [46.0, 54.7, 59.9, 63.2, 66.0, 68.9, 71.0, 73.0, 75.0, 76.9, 78.5, 80.0, 81.8];
            }

            if ($edad > 24 && $edad <= 60 && $sexo == "M") {
                // TALLA PARA LA EDAD 2 A 5 AÑOS (NIÑOS)
                $longitudes = [24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60];

                $pesosZ2 =  [93.2, 95.0, 96.8, 98.6, 100.2, 101.7, 103.2, 104.7, 106.2, 107.6, 109.0, 110.3, 111.6, 112.8, 114.0, 115.2, 116.5, 117.7, 119.0];
                $pesosZ1 =  [90.2, 91.9, 93.6, 95.2, 96.8, 98.2, 99.6, 101.0, 102.3, 103.6, 104.9, 106.1, 107.4, 108.6, 109.8, 111.0, 112.2, 113.3, 114.5];
                $pesosZ0 = [87.2, 88.8, 90.3, 91.8, 93.3, 94.6, 95.9, 97.2, 98.5, 99.6, 100.8, 101.9, 103.1, 104.2, 105.3, 106.5, 107.6, 108.7, 109.8];
                $pesosZ_1 = [84.0, 85.5, 86.9, 88.4, 89.8, 91.0, 92.2, 93.3, 94.6, 95.8, 96.8, 97.8, 98.8, 99.8, 100.9, 101.9, 103.0, 104.1, 105.0];
                $pesosZ_2 = [81.0, 82.4, 83.8, 85.0, 86.0, 87.3, 88.5, 89.6, 90.7, 91.8, 92.8, 93.8, 94.8, 95.8, 96.8, 97.7, 98.7, 99.7, 100.7];
            }

            if ($edad >= 0 && $edad <= 24 && $sexo == "F") {

                // TALLA PARA LA EDAD 0 A 2 AÑOS (NIÑAS)
                $longitudes = [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24];

                $pesosZ2 =  [53.0, 61.0, 66.4, 70.1, 73.5, 76.4, 79.0, 81.7, 84.1, 86.6, 88.9, 90.9, 92.9];
                $pesosZ1 =  [51.0, 59.0, 64.1, 68.0, 71.0, 74.0, 76.5, 79.0, 81.4, 83.5, 85.8, 87.9, 89.8];
                $pesosZ0 =  [49.0, 57.0, 62.0, 65.9, 68.9, 71.5, 74.0, 76.4, 78.7, 80.8, 82.9, 84.7, 86.4];
                $pesosZ_1 = [47.4, 55.0, 60.0, 63.5, 66.4, 69.0, 71.4, 73.8, 75.9, 77.9, 79.8, 81.5, 83.0];
                $pesosZ_2 = [45.5, 53.0, 57.9, 61.0, 64.0, 66.5, 68.9, 71.0, 73.0, 75.0, 76.8, 78.4, 80.0];
            }

            if ($edad > 24 && $edad <= 60 && $sexo == "F") {
                // TALLA PARA LA EDAD 2 A 5 AÑOS (NIÑAS)
                $longitudes = [24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60];

                $pesosZ2 = [92.2, 94.06, 95.8, 97.4, 99.0, 100.6, 102.2, 103.8, 105.2, 106.8, 108.2, 109.6, 111.0, 112.4, 113.8, 115.2, 116.53, 117.8, 119.0];
                $pesosZ1 = [89.0, 90.8, 92.46, 94.1, 95.63, 97.13, 98.56, 100.03, 101.4, 102.76, 104.06, 105.36, 106.63, 107.86, 109.13, 110.4, 111.66, 112.86, 114.0];
                $pesosZ0 = [86.0, 87.5, 89.0, 90.46, 91.96, 93.3, 94.63, 96.03, 97.33, 98.63, 99.9, 101.16, 102.36, 103.5, 104.6, 105.73, 106.93, 108.16, 109.4];
                $pesosZ_1 = [82.5, 84.0, 85.5, 86.96, 88.36, 89.7, 91.0, 92.3, 93.56, 94.76, 95.9, 97.03, 98.16, 99.3, 100.4, 101.53, 102.66, 103.76, 104.8];
                $pesosZ_2 = [79.2, 80.73, 82.2, 83.56, 84.86, 86.1, 87.3, 88.53, 89.76, 90.96, 92.1, 93.2, 94.26, 95.3, 96.3, 97.26, 98.2, 99.1, 100.0];
            }

            if ($edad > 60 && $edad <= 204 && $sexo == "M") {
                // TALLA PARA LA EDAD 5 A 17 AÑOS (NIÑOS)
                $longitudes = [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228];

                $pesosZ2 = [119.448, 120.046, 120.641, 121.231, 121.819, 122.402, 122.981, 123.553, 124.123, 124.689, 125.248, 125.804, 126.357, 126.905, 127.452, 127.997, 128.539, 129.081, 129.622, 130.162, 130.698, 131.236, 131.771, 132.305, 132.837, 133.367, 133.896, 134.423, 134.947, 135.47, 135.991, 136.51, 137.026, 137.54, 138.051, 138.561, 139.069, 139.575, 140.08, 140.583, 141.086, 141.59, 142.091, 142.591, 143.091, 143.59, 144.09, 144.589, 145.088, 145.586, 146.084, 146.578, 147.075, 147.571, 148.064, 148.559, 149.05, 149.544, 150.036, 150.527, 151.019, 151.511, 152.006, 152.502, 153.001, 153.499, 154.004, 154.51, 155.02, 155.535, 156.054, 156.574, 157.102, 157.632, 158.168, 158.707, 159.255, 159.806, 160.363, 160.928, 161.499, 162.076, 162.66, 163.252, 163.85, 164.46, 165.072, 165.696, 166.326, 166.964, 167.607, 168.261, 168.914, 169.575, 170.236, 170.898, 171.561, 172.225, 172.888, 173.547, 174.198, 174.848, 175.49, 176.122, 176.747, 177.364, 177.972, 178.566, 179.146, 179.717, 180.271, 180.811, 181.334, 181.841, 182.334, 182.812, 183.272, 183.717, 184.149, 184.566, 184.966, 185.351, 185.723, 186.079, 186.423, 186.752, 187.065, 187.368, 187.654, 187.928, 188.192, 188.44, 188.675, 188.897, 189.106, 189.302, 189.486, 189.658, 189.818, 189.966, 190.102, 190.227, 190.345, 190.449, 190.542, 190.63, 190.705, 190.774, 190.833, 190.887, 190.934, 190.975, 191.01, 191.04, 191.065, 191.086, 191.105, 191.118, 191.131, 191.141, 191.148, 191.149, 191.154, 191.154, 191.151, 191.147, 191.144, 191.14];
                $pesosZ1 = [114.856, 115.423, 115.988, 116.547, 117.104, 117.657, 118.204, 118.747, 119.287, 119.822, 120.351, 120.878, 121.4, 121.919, 122.436, 122.951, 123.463, 123.975, 124.486, 124.996, 125.503, 126.01, 126.516, 127.019, 127.521, 128.021, 128.519, 129.016, 129.511, 130.003, 130.494, 130.982, 131.468, 131.952, 132.434, 132.913, 133.391, 133.867, 134.342, 134.815, 135.287, 135.76, 136.231, 136.701, 137.17, 137.639, 138.108, 138.577, 139.045, 139.513, 139.98, 140.446, 140.912, 141.377, 141.84, 142.304, 142.767, 143.23, 143.691, 144.153, 144.615, 145.078, 145.543, 146.009, 146.477, 146.947, 147.422, 147.898, 148.379, 148.863, 149.352, 149.843, 150.341, 150.842, 151.348, 151.858, 152.375, 152.897, 153.425, 153.96, 154.502, 155.049, 155.604, 156.167, 156.736, 157.314, 157.899, 158.493, 159.094, 159.703, 160.319, 160.942, 161.568, 162.2, 162.835, 163.47, 164.107, 164.746, 165.383, 166.017, 166.646, 167.272, 167.892, 168.504, 169.11, 169.707, 170.296, 170.874, 171.439, 171.994, 172.535, 173.063, 173.575, 174.073, 174.557, 175.027, 175.481, 175.921, 176.349, 176.762, 177.16, 177.545, 177.916, 178.274, 178.618, 178.949, 179.266, 179.573, 179.865, 180.144, 180.413, 180.668, 180.911, 181.141, 181.359, 181.565, 181.759, 181.942, 182.112, 182.272, 182.421, 182.559, 182.688, 182.805, 182.912, 183.013, 183.102, 183.185, 183.259, 183.327, 183.389, 183.444, 183.494, 183.539, 183.579, 183.615, 183.649, 183.678, 183.704, 183.729, 183.75, 183.767, 183.785, 183.8, 183.812, 183.822, 183.833, 183.841];
                $pesosZ0 = [110.265, 110.801, 111.334, 111.864, 112.39, 112.911, 113.428, 113.941, 114.45, 114.955, 115.455, 115.951, 116.443, 116.932, 117.42, 117.905, 118.388, 118.87, 119.351, 119.83, 120.308, 120.785, 121.26, 121.734, 122.205, 122.675, 123.143, 123.609, 124.074, 124.536, 124.996, 125.454, 125.91, 126.364, 126.816, 127.265, 127.713, 128.159, 128.603, 129.047, 129.489, 129.93, 130.37, 130.81, 131.25, 131.688, 132.127, 132.565, 133.003, 133.44, 133.877, 134.313, 134.748, 135.183, 135.617, 136.05, 136.483, 136.915, 137.347, 137.78, 138.212, 138.645, 139.08, 139.516, 139.954, 140.395, 140.839, 141.286, 141.737, 142.192, 142.65, 143.113, 143.58, 144.051, 144.528, 145.009, 145.496, 145.989, 146.488, 146.993, 147.504, 148.022, 148.548, 149.081, 149.621, 150.169, 150.726, 151.29, 151.862, 152.442, 153.03, 153.623, 154.222, 154.826, 155.433, 156.043, 156.654, 157.266, 157.878, 158.487, 159.094, 159.696, 160.294, 160.886, 161.472, 162.05, 162.621, 163.182, 163.732, 164.272, 164.799, 165.314, 165.816, 166.305, 166.78, 167.242, 167.69, 168.126, 168.548, 168.958, 169.355, 169.739, 170.11, 170.468, 170.814, 171.147, 171.468, 171.777, 172.075, 172.361, 172.634, 172.897, 173.147, 173.386, 173.613, 173.828, 174.032, 174.225, 174.407, 174.578, 174.739, 174.89, 175.03, 175.161, 175.282, 175.395, 175.5, 175.596, 175.685, 175.767, 175.843, 175.913, 175.978, 176.038, 176.094, 176.145, 176.192, 176.237, 176.278, 176.316, 176.352, 176.385, 176.416, 176.445, 176.472, 176.498, 176.521, 176.543];
                $pesosZ_1 = [105.673, 106.178, 106.68, 107.18, 107.675, 108.165, 108.652, 109.135, 109.613, 110.088, 110.558, 111.024, 111.486, 111.946, 112.403, 112.858, 113.313, 113.765, 114.215, 114.664, 115.114, 115.56, 116.005, 116.448, 116.889, 117.329, 117.766, 118.203, 118.637, 119.069, 119.499, 119.927, 120.353, 120.776, 121.198, 121.617, 122.035, 122.451, 122.865, 123.278, 123.69, 124.1, 124.51, 124.92, 125.329, 125.737, 126.146, 126.553, 126.961, 127.368, 127.774, 128.18, 128.585, 128.989, 129.393, 129.796, 130.199, 130.601, 131.003, 131.406, 131.809, 132.212, 132.617, 133.023, 133.431, 133.843, 134.256, 134.674, 135.095, 135.52, 135.948, 136.382, 136.818, 137.261, 137.707, 138.161, 138.617, 139.081, 139.55, 140.025, 140.507, 140.996, 141.492, 141.995, 142.507, 143.024, 143.553, 144.087, 144.631, 145.182, 145.741, 146.305, 146.877, 147.451, 148.031, 148.615, 149.2, 149.786, 150.372, 150.957, 151.542, 152.12, 152.696, 153.268, 153.834, 154.394, 154.945, 155.489, 156.025, 156.549, 157.064, 157.566, 158.058, 158.537, 159.003, 159.456, 159.899, 160.33, 160.748, 161.154, 161.549, 161.933, 162.304, 162.662, 163.009, 163.344, 163.67, 163.982, 164.285, 164.577, 164.856, 165.125, 165.383, 165.63, 165.866, 166.091, 166.305, 166.509, 166.702, 166.885, 167.058, 167.221, 167.373, 167.517, 167.652, 167.778, 167.897, 168.007, 168.111, 168.207, 168.298, 168.382, 168.462, 168.537, 168.608, 168.675, 168.736, 168.796, 168.851, 168.904, 168.954, 169.003, 169.047, 169.091, 169.133, 169.173, 169.21, 169.245];
                $pesosZ_2 = [101.082, 101.555, 102.026, 102.496, 102.96, 103.42, 103.875, 104.329, 104.777, 105.22, 105.662, 106.097, 106.529, 106.96, 107.387, 107.812, 108.237, 108.659, 109.079, 109.499, 109.919, 110.335, 110.75, 111.162, 111.573, 111.983, 112.39, 112.796, 113.2, 113.602, 114.002, 114.399, 114.795, 115.188, 115.58, 115.969, 116.357, 116.743, 117.127, 117.51, 117.892, 118.27, 118.65, 119.03, 119.408, 119.786, 120.164, 120.542, 120.918, 121.295, 121.67, 122.048, 122.422, 122.795, 123.17, 123.542, 123.916, 124.286, 124.659, 125.032, 125.405, 125.779, 126.154, 126.53, 126.907, 127.29, 127.673, 128.062, 128.453, 128.848, 129.247, 129.651, 130.057, 130.47, 130.887, 131.312, 131.738, 132.173, 132.612, 133.058, 133.509, 133.969, 134.436, 134.909, 135.392, 135.879, 136.38, 136.884, 137.399, 137.921, 138.452, 138.986, 139.531, 140.077, 140.629, 141.187, 141.747, 142.307, 142.867, 143.428, 143.989, 144.544, 145.098, 145.65, 146.197, 146.737, 147.269, 147.797, 148.318, 148.827, 149.328, 149.818, 150.299, 150.769, 151.226, 151.671, 152.108, 152.534, 152.947, 153.35, 153.744, 154.126, 154.497, 154.857, 155.205, 155.542, 155.871, 156.187, 156.495, 156.793, 157.077, 157.353, 157.619, 157.875, 158.119, 158.354, 158.578, 158.792, 158.996, 159.191, 159.376, 159.552, 159.715, 159.873, 160.022, 160.16, 160.294, 160.417, 160.537, 160.648, 160.752, 160.852, 160.946, 161.036, 161.122, 161.204, 161.28, 161.355, 161.425, 161.492, 161.556, 161.622, 161.678, 161.737, 161.793, 161.848, 161.898, 161.947];
            }

            if ($edad > 60 && $edad <= 204 && $sexo == "F") {
                // TALLA PARA LA EDAD 5 A 17 AÑOS (NIÑAS)
                $longitudes = [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228];

                $pesosZ2 = [119.148, 119.738, 120.322, 120.902, 121.474, 122.044, 122.608, 123.167, 123.722, 124.273, 124.82, 125.364, 125.902, 126.438, 126.975, 127.505, 128.037, 128.569, 129.097, 129.628, 130.157, 130.686, 131.216, 131.744, 132.275, 132.805, 133.338, 133.869, 134.399, 134.933, 135.468, 136.002, 136.537, 137.073, 137.611, 138.151, 138.692, 139.233, 139.775, 140.318, 140.864, 141.411, 141.958, 142.506, 143.058, 143.608, 144.161, 144.716, 145.269, 145.824, 146.381, 146.939, 147.496, 148.057, 148.616, 149.175, 149.738, 150.302, 150.865, 151.43, 151.993, 152.562, 153.129, 153.698, 154.269, 154.842, 155.414, 155.987, 156.562, 157.137, 157.713, 158.286, 158.858, 159.43, 159.997, 160.565, 161.127, 161.686, 162.24, 162.787, 163.331, 163.866, 164.393, 164.913, 165.421, 165.923, 166.412, 166.892, 167.358, 167.812, 168.253, 168.679, 169.095, 169.497, 169.883, 170.258, 170.616, 170.961, 171.291, 171.612, 171.915, 172.205, 172.481, 172.744, 172.998, 173.236, 173.461, 173.675, 173.877, 174.07, 174.249, 174.418, 174.579, 174.726, 174.867, 174.995, 175.117, 175.23, 175.334, 175.427, 175.516, 175.597, 175.674, 175.741, 175.802, 175.857, 175.91, 175.953, 175.995, 176.032, 176.061, 176.089, 176.113, 176.134, 176.152, 176.167, 176.182, 176.193, 176.205, 176.212, 176.221, 176.225, 176.232, 176.238, 176.243, 176.248, 176.251, 176.254, 176.257, 176.263, 176.265, 176.27, 176.271, 176.275, 176.278, 176.277, 176.279, 176.28, 176.28, 176.279, 176.28, 176.276, 176.271, 176.268, 176.261, 176.255, 176.245, 176.237];
                $pesosZ1 = [114.375, 114.932, 115.484, 116.031, 116.572, 117.11, 117.642, 118.171, 118.695, 119.215, 119.731, 120.244, 120.753, 121.26, 121.766, 122.268, 122.771, 123.273, 123.773, 124.275, 124.775, 125.275, 125.777, 126.277, 126.78, 127.282, 127.786, 128.289, 128.793, 129.299, 129.806, 130.312, 130.821, 131.33, 131.841, 132.353, 132.867, 133.381, 133.897, 134.415, 134.934, 135.454, 135.975, 136.498, 137.024, 137.549, 138.076, 138.605, 139.134, 139.665, 140.196, 140.73, 141.263, 141.799, 142.335, 142.871, 143.41, 143.95, 144.491, 145.033, 145.575, 146.121, 146.667, 147.215, 147.764, 148.316, 148.867, 149.42, 149.975, 150.53, 151.085, 151.639, 152.193, 152.746, 153.296, 153.845, 154.391, 154.933, 155.471, 156.003, 156.532, 157.052, 157.566, 158.073, 158.57, 159.059, 159.537, 160.006, 160.463, 160.908, 161.341, 161.761, 162.169, 162.565, 162.946, 163.316, 163.671, 164.014, 164.343, 164.66, 164.963, 165.252, 165.529, 165.793, 166.047, 166.287, 166.515, 166.732, 166.937, 167.134, 167.318, 167.491, 167.656, 167.809, 167.955, 168.09, 168.217, 168.336, 168.447, 168.548, 168.644, 168.732, 168.815, 168.89, 168.959, 169.023, 169.082, 169.134, 169.183, 169.228, 169.266, 169.302, 169.335, 169.364, 169.39, 169.413, 169.436, 169.455, 169.474, 169.489, 169.506, 169.519, 169.533, 169.546, 169.559, 169.571, 169.582, 169.592, 169.602, 169.614, 169.623, 169.634, 169.643, 169.652, 169.661, 169.668, 169.676, 169.683, 169.689, 169.694, 169.699, 169.702, 169.703, 169.705, 169.704, 169.703, 169.699, 169.696];
                $pesosZ0 = [109.602, 110.126, 110.645, 111.16, 111.67, 112.175, 112.677, 113.174, 113.667, 114.156, 114.642, 115.124, 115.604, 116.081, 116.557, 117.031, 117.504, 117.977, 118.449, 118.921, 119.393, 119.865, 120.337, 120.81, 121.284, 121.759, 122.234, 122.71, 123.187, 123.665, 124.144, 124.623, 125.104, 125.587, 126.071, 126.556, 127.042, 127.53, 128.02, 128.511, 129.004, 129.498, 129.993, 130.49, 130.989, 131.49, 131.991, 132.494, 132.999, 133.505, 134.012, 134.52, 135.03, 135.541, 136.053, 136.567, 137.082, 137.599, 138.117, 138.636, 139.158, 139.68, 140.205, 140.731, 141.259, 141.789, 142.321, 142.853, 143.387, 143.922, 144.458, 144.993, 145.528, 146.062, 146.595, 147.126, 147.655, 148.18, 148.702, 149.22, 149.732, 150.239, 150.739, 151.233, 151.718, 152.195, 152.663, 153.121, 153.568, 154.004, 154.429, 154.842, 155.244, 155.633, 156.01, 156.375, 156.727, 157.067, 157.394, 157.708, 158.01, 158.3, 158.577, 158.842, 159.096, 159.338, 159.569, 159.789, 159.998, 160.197, 160.386, 160.564, 160.733, 160.893, 161.043, 161.184, 161.318, 161.442, 161.56, 161.669, 161.772, 161.867, 161.956, 162.039, 162.116, 162.188, 162.254, 162.315, 162.372, 162.424, 162.472, 162.516, 162.556, 162.593, 162.628, 162.659, 162.689, 162.716, 162.742, 162.767, 162.79, 162.813, 162.834, 162.854, 162.874, 162.894, 162.912, 162.93, 162.948, 162.965, 162.982, 162.998, 163.014, 163.03, 163.045, 163.06, 163.073, 163.086, 163.098, 163.109, 163.119, 163.128, 163.136, 163.142, 163.147, 163.151, 163.153, 163.155];
                $pesosZ_1 = [104.828, 105.32, 105.807, 106.289, 106.767, 107.241, 107.711, 108.177, 108.64, 109.098, 109.553, 110.005, 110.455, 110.903, 111.348, 111.794, 112.238, 112.681, 113.125, 113.567, 114.01, 114.454, 114.898, 115.344, 115.789, 116.236, 116.682, 117.13, 117.581, 118.03, 118.481, 118.934, 119.388, 119.844, 120.3, 120.758, 121.218, 121.679, 122.143, 122.607, 123.073, 123.541, 124.011, 124.483, 124.954, 125.43, 125.906, 126.384, 126.864, 127.345, 127.827, 128.311, 128.797, 129.283, 129.772, 130.263, 130.754, 131.247, 131.743, 132.24, 132.74, 133.24, 133.743, 134.248, 134.754, 135.263, 135.774, 136.286, 136.8, 137.315, 137.83, 138.346, 138.863, 139.378, 139.894, 140.407, 140.919, 141.428, 141.933, 142.436, 142.933, 143.426, 143.912, 144.392, 144.867, 145.331, 145.788, 146.235, 146.673, 147.1, 147.517, 147.924, 148.318, 148.701, 149.074, 149.433, 149.782, 150.12, 150.445, 150.756, 151.058, 151.347, 151.625, 151.892, 152.145, 152.389, 152.623, 152.846, 153.059, 153.261, 153.454, 153.638, 153.81, 153.976, 154.131, 154.279, 154.418, 154.549, 154.672, 154.79, 154.9, 155.003, 155.098, 155.188, 155.273, 155.353, 155.427, 155.497, 155.56, 155.62, 155.677, 155.729, 155.777, 155.823, 155.866, 155.906, 155.942, 155.978, 156.011, 156.045, 156.075, 156.106, 156.135, 156.163, 156.19, 156.216, 156.242, 156.268, 156.293, 156.316, 156.34, 156.363, 156.386, 156.408, 156.429, 156.451, 156.47, 156.489, 156.507, 156.524, 156.539, 156.554, 156.568, 156.579, 156.59, 156.599, 156.608, 156.614];
                $pesosZ_2 = [100.055, 100.514, 100.968, 101.418, 101.865, 102.306, 102.745, 103.181, 103.612, 104.04, 104.464, 104.885, 105.306, 105.724, 106.139, 106.557, 106.971, 107.385, 107.8, 108.213, 108.628, 109.043, 109.459, 109.877, 110.294, 110.713, 111.13, 111.551, 111.974, 112.396, 112.819, 113.245, 113.672, 114.101, 114.53, 114.961, 115.393, 115.828, 116.265, 116.703, 117.143, 117.584, 118.029, 118.475, 118.92, 119.371, 119.822, 120.273, 120.728, 121.185, 121.643, 122.101, 122.564, 123.025, 123.49, 123.959, 124.427, 124.896, 125.369, 125.843, 126.322, 126.799, 127.281, 127.764, 128.249, 128.736, 129.227, 129.719, 130.213, 130.707, 131.202, 131.7, 132.198, 132.695, 133.193, 133.688, 134.183, 134.675, 135.164, 135.653, 136.134, 136.612, 137.085, 137.552, 138.015, 138.467, 138.914, 139.349, 139.777, 140.196, 140.605, 141.006, 141.393, 141.769, 142.138, 142.492, 142.838, 143.172, 143.496, 143.805, 144.105, 144.395, 144.673, 144.941, 145.194, 145.441, 145.677, 145.903, 146.12, 146.324, 146.522, 146.711, 146.888, 147.059, 147.219, 147.374, 147.518, 147.655, 147.785, 147.911, 148.028, 148.138, 148.239, 148.337, 148.431, 148.519, 148.599, 148.678, 148.749, 148.816, 148.883, 148.942, 148.999, 149.053, 149.103, 149.152, 149.196, 149.24, 149.28, 149.322, 149.36, 149.4, 149.436, 149.471, 149.506, 149.539, 149.573, 149.606, 149.638, 149.667, 149.699, 149.727, 149.758, 149.785, 149.812, 149.842, 149.868, 149.893, 149.917, 149.94, 149.959, 149.98, 150.0, 150.015, 150.033, 150.047, 150.062, 150.073];
            }

            $bandasZ = [
                '+2' => $pesosZ2,
                '+1' => $pesosZ1,
                '0'  => $pesosZ0,
                '-1' => $pesosZ_1,
                '-2' => $pesosZ_2,
            ];

            function interpolarTalla($edadPaciente, $edadesEnMeses, $tallas)
            {
                $n = count($edadesEnMeses);

                // fuera de rango
                if ($edadPaciente <= $edadesEnMeses[0]) return $tallas[0];
                if ($edadPaciente >= $edadesEnMeses[$n - 1]) return $tallas[$n - 1];

                for ($i = 0; $i < $n - 1; $i++) {
                    $e1 = $edadesEnMeses[$i];
                    $e2 = $edadesEnMeses[$i + 1];

                    if ($edadPaciente >= $e1 && $edadPaciente <= $e2) {
                        $t1 = $tallas[$i];
                        $t2 = $tallas[$i + 1];

                        return $t1 + ($t2 - $t1) * ($edadPaciente - $e1) / ($e2 - $e1);
                    }
                }
            }

            function clasificarTallaEdad($edadPaciente, $tallaPaciente, $edadesEnMeses, $bandasZ)
            {
                $valoresZ = [];
                foreach ($bandasZ as $z => $tallas) {
                    $valoresZ[$z] = interpolarTalla($edadPaciente, $edadesEnMeses, $tallas);
                }

                if ($tallaPaciente >= $valoresZ['-1']) {
                    return "Adecuada para Edad - >=Z-1";
                } elseif ($tallaPaciente >= $valoresZ['-2'] && $tallaPaciente < $valoresZ['-1']) {
                    return "Riesgo Talla Baja - >=Z-2 a <Z-1";
                } elseif ($tallaPaciente < $valoresZ['-2']) {
                    return "Baja para Edad - <Z-2";
                } else {
                    return "Sin Clasificación";
                }
            }

            if ($graficaHistoria != true) {
                $intersecciones = $datos->map(function ($item) use ($fechaNacimiento, $longitudes, $bandasZ) {
                    $nacimiento = Carbon::parse($fechaNacimiento);
                    $fechaConsulta = Carbon::createFromFormat('d/m/Y', $item['hora_fin_atendio_consulta']);
                    $edadEnMeses = $nacimiento->diffInMonths($fechaConsulta);

                    $tallaPaciente = (float)$item['talla'];

                    $clasificacion = clasificarTallaEdad(
                        $edadEnMeses,
                        $tallaPaciente,
                        $longitudes,
                        $bandasZ
                    );

                    return [
                        'x' => $edadEnMeses,
                        'y' => $tallaPaciente,
                        'fecha' => $item['hora_fin_atendio_consulta'],
                        'clasificacion' => $clasificacion,
                    ];
                })->values()->all();
            } else {
                $clasificacion = clasificarTallaEdad(
                    $edad,
                    $altura,
                    $longitudes,
                    $bandasZ
                );
                $intersecciones = $clasificacion;
            }

            $chartConfig = [
                'type' => 'line',
                'data' => [
                    'datasets' => [
                        [
                            'label' => 'Intersección',
                            'data' => $intersecciones,
                            'pointBackgroundColor' => 'blue',
                            'pointRadius' => 2,
                            'showLine' => true,
                            'borderDash' => [5, 5],
                            'fill' => false,
                            'datalabels' => [
                                'display' => true,
                                'align' => 'top',
                                'anchor' => 'end',
                                'color' => 'black',
                                'rotation' => -90,
                                'font' => [
                                    'weight' => 'bold',
                                    'size' => 10,
                                ],
                                'formatter' => "__FUNC__function(value) { return value.fecha; }__ENDFUNC__",
                            ],
                        ],
                        [
                            'label' => 'Z-2',
                            'data' => array_map(function ($x, $y) {
                                return ['x' => $x, 'y' => $y];
                            }, $longitudes, $pesosZ_2),
                            'borderColor' => 'orangered',
                            'borderDash' => [5, 5],
                            'borderWidth' => 2,
                            'fill' => false,
                            'pointRadius' => 0
                        ],
                        [
                            'label' => 'Z-1',
                            'data' => array_map(function ($x, $y) {
                                return ['x' => $x, 'y' => $y];
                            }, $longitudes, $pesosZ_1),
                            'borderColor' => 'orange',
                            'borderWidth' => 2,
                            'fill' => false,
                            'pointRadius' => 0
                        ],
                        [
                            'label' => 'Z0',
                            'data' => array_map(function ($x, $y) {
                                return ['x' => $x, 'y' => $y];
                            }, $longitudes, $pesosZ0),
                            'borderColor' => 'green',
                            'borderWidth' => 2,
                            'fill' => false,
                            'pointRadius' => 0
                        ],
                        [
                            'label' => 'Z+1',
                            'data' => array_map(function ($x, $y) {
                                return ['x' => $x, 'y' => $y];
                            }, $longitudes, $pesosZ1),
                            'borderColor' => '001256',
                            'borderWidth' => 2,
                            'fill' => false,
                            'pointRadius' => 0
                        ],
                        [
                            'label' => 'Z+2',
                            'data' => array_map(function ($x, $y) {
                                return ['x' => $x, 'y' => $y];
                            }, $longitudes, $pesosZ2),
                            'borderColor' => '#001256',
                            'borderWidth' => 2,
                            'fill' => false,
                            'pointRadius' => 0
                        ],
                    ]
                ],
                'options' => [
                    'title' => [
                        'display' => true,
                        'text' => 'Curvas de crecimiento: Talla para la edad',
                    ],
                    'legend' => [
                        'display' => false,
                    ],
                    'scales' => [
                        'xAxes' => [[
                            'type' => 'linear',
                            'position' => 'bottom',
                            'scaleLabel' => [
                                'display' => true,
                                'labelString' => 'Edad en meses'
                            ],
                            'ticks' => $ticksX,
                            'gridLines' => [
                                'drawTicks' => true,
                                'color' => 'rgba(0, 0, 0, 0.1)',
                                'lineWidth' => 0.5
                            ]
                        ]],
                        'yAxes' => [[
                            'scaleLabel' => [
                                'display' => true,
                                'labelString' => 'Longitud (cm)'
                            ],
                            'ticks' => $ticksY,
                            'gridLines' => [
                                'drawTicks' => true,
                                'color' => 'rgba(0, 0, 0, 0.1)',
                                'lineWidth' => 0.5
                            ]
                        ]]
                    ]
                ]
            ];
            $nombreImagen = 'graficaTallaEdad.png';
            if ($graficaHistoria == false) {
                $this->generarPdfDesdeGrafica($chartConfig, $nombreImagen);
            }
            return $intersecciones;
        }
    }

    // GRAFICAS PERIMETRO CEFALICO
    public function generarGraficaPerimetroCefalico($request)
    {
        $peso = $request->peso;
        $altura = $request->talla;
        $afiliadoId = $request->afiliadoId;
        $edad = $request->edad;
        $sexo = $request->sexo;
        $fechaNacimiento = $request->fechaNacimiento;
        $graficaHistoria = $request->graficasHistoria;
        $perimetroCefalico = $request->perimetro_cefalico;
        $consultaId = $request->consultaId;
        $datos = $this->graficasOmsRepository->obtenerDatos($afiliadoId, $consultaId);

        if ($perimetroCefalico != null && $datos != null) {

            if ($edad >= 0 && $edad <= 60) {
                function curvaPerimetroCefalico($base, $desviacion)
                {
                    return array_map(fn($v) => round($v + $desviacion, 1), $base);
                }
                $longitudes = [];
                $pesosZ2 =  [];
                $pesosZ1 =  [];
                $pesosZ0 =  [];
                $pesosZ_1 = [];
                $pesosZ_2 = [];
                $peso = (float)$peso;
                $altura = (float)$altura;

                if ($edad >= 0 && $edad <= 60 && $sexo == "M") {
                    // PERIMETRO CEFALICO 0 A 5 AÑOS (NIÑOS)
                    $longitudes = [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60];

                    $pesosZ2  = [37.0, 41.5, 43.68, 45.36, 46.52, 47.48, 48.28, 48.9, 49.36, 49.76, 50.14, 50.48, 50.8, 51.08, 51.34, 51.58, 51.84, 52.06, 52.24, 52.42, 52.56, 52.68, 52.82, 52.94, 53.06, 53.18, 53.28, 53.4, 53.5, 53.6, 53.7];
                    $pesosZ1  = [35.8, 40.4, 42.48, 44.1, 45.32, 46.28, 47.04, 47.66, 48.14, 48.54, 48.86, 49.16, 49.46, 49.72, 49.96, 50.2, 50.4, 50.62, 50.82, 51.02, 51.18, 51.32, 51.46, 51.6, 51.72, 51.82, 51.92, 52.02, 52.12, 52.2, 52.3];
                    $pesosZ0  = [34.5, 39.0, 41.1, 42.92, 44.18, 45.1, 45.78, 46.42, 46.88, 47.28, 47.62, 47.92, 48.22, 48.46, 48.66, 48.86, 49.06, 49.26, 49.44, 49.6, 49.74, 49.88, 50.0, 50.12, 50.22, 50.32, 50.42, 50.5, 50.59, 50.65, 50.7];
                    $pesosZ_1 = [33.3, 38.0, 40.06, 41.68, 42.93, 43.89, 44.59, 45.16, 45.62, 45.98, 46.3, 46.58, 46.85, 47.1, 47.33, 47.53, 47.74, 47.92, 48.08, 48.24, 48.36, 48.46, 48.58, 48.68, 48.78, 48.88, 48.98, 49.08, 49.18, 49.25, 49.3];
                    $pesosZ_2 = [31.9, 36.9, 38.98, 40.58, 41.74, 42.66, 43.36, 43.89, 44.32, 44.66, 44.97, 45.24, 45.48, 45.69, 45.92, 46.09, 46.28, 46.44, 46.6, 46.76, 46.89, 47.02, 47.14, 47.24, 47.34, 47.42, 47.52, 47.59, 47.63, 47.67, 47.7];
                }

                if ($edad >= 0 && $edad <= 60 && $sexo == "F") {
                    // PERIMETRO CEFALICO 0 A 5 AÑOS (NIÑAS)
                    $longitudes = [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60];

                    $pesosZ2  = [36.3, 40.7, 42.82, 44.42, 45.66, 46.58, 47.3, 47.92, 48.4, 48.8, 49.19, 49.54, 49.87, 50.18, 50.46, 50.72, 50.96, 51.16, 51.32, 51.48, 51.64, 51.78, 51.92, 52.06, 52.18, 52.3, 52.38, 52.46, 52.54, 52.6, 52.7];
                    $pesosZ1  = [35.0, 39.5, 41.52, 43.14, 44.4, 45.28, 46.0, 46.62, 47.16, 47.54, 47.9, 48.26, 48.56, 48.86, 49.14, 49.38, 49.6, 49.82, 50.0, 50.18, 50.32, 50.46, 50.58, 50.72, 50.88, 51.02, 51.14, 51.24, 51.30, 51.32, 51.35];
                    $pesosZ0  = [33.9, 38.3, 40.26, 41.9, 43.1, 44.02, 44.72, 45.28, 45.78, 46.18, 46.52, 46.84, 47.16, 47.44, 47.66, 47.88, 48.12, 48.34, 48.52, 48.66, 48.8, 48.98, 49.14, 49.28, 49.39, 49.49, 49.58, 49.68, 49.79, 49.85, 49.9];
                    $pesosZ_1 = [32.7, 37.0, 39.06, 40.66, 41.86, 42.78, 43.46, 43.98, 44.46, 44.86, 45.18, 45.48, 45.74, 46.0, 46.24, 46.48, 46.69, 46.9, 47.12, 47.28, 47.46, 47.6, 47.74, 47.88, 47.99, 48.1, 48.2, 48.3, 48.4, 48.45, 48.5];
                    $pesosZ_2 = [31.5, 35.9, 37.86, 39.42, 40.58, 41.38, 42.08, 42.66, 43.08, 43.46, 43.79, 44.09, 44.38, 44.62, 44.88, 45.09, 45.29, 45.48, 45.66, 45.83, 45.98, 46.12, 46.26, 46.38, 46.49, 46.59, 46.68, 46.78, 46.88, 46.94, 47.0];
                }

                $bandasZ = [
                    '+2' => $pesosZ2,
                    '+1' => $pesosZ1,
                    '0' => $pesosZ0,
                    '-1' => $pesosZ_1,
                    '-2' => $pesosZ_2,
                ];

                function interpolarValor($edadPaciente, $edades, $valores)
                {
                    if (!is_array($edades) || !is_array($valores)) {
                        throw new InvalidArgumentException('Se esperaban arrays');
                    }

                    $n = count($edades);

                    if ($edadPaciente <= $edades[0]) return $valores[0];
                    if ($edadPaciente >= $edades[$n - 1]) return $valores[$n - 1];

                    for ($i = 0; $i < $n - 1; $i++) {
                        $x1 = $edades[$i];
                        $x2 = $edades[$i + 1];
                        if ($edadPaciente >= $x1 && $edadPaciente <= $x2) {
                            $y1 = $valores[$i];
                            $y2 = $valores[$i + 1];
                            return $y1 + ($y2 - $y1) * ($edadPaciente - $x1) / ($x2 - $x1);
                        }
                    }
                    return null;
                }

                function clasificarCefalicoEdad($edadPaciente, $pcPaciente, $edades, $bandasZ)
                {
                    $valoresZ = [];
                    foreach ($bandasZ as $z => $valores) {
                        $valoresZ[$z] = interpolarValor($edadPaciente, $edades, $valores);
                    }

                    if ($pcPaciente > $valoresZ['+2']) {
                        return "Factor de Riesgo en Neurodesarrollo >Z+2";
                    } elseif ($pcPaciente >= $valoresZ['-2'] && $pcPaciente <= $valoresZ['+2']) {
                        return "Normal >=Z-2 a <=Z+2";
                    } elseif ($pcPaciente < $valoresZ['-2']) {
                        return "Factor de Riesgo en Neurodesarrollo <Z-2";
                    }
                    return "Sin Clasificación";
                }
                if ($graficaHistoria != true) {

                    $intersecciones = $datos->map(function ($item) use ($fechaNacimiento, $longitudes, $bandasZ) {
                        $nacimiento = Carbon::parse($fechaNacimiento);
                        $fechaConsulta = Carbon::createFromFormat('d/m/Y', $item['hora_fin_atendio_consulta']);
                        $edadEnMeses = $nacimiento->diffInMonths($fechaConsulta);

                        $pcPaciente = (float) $item['perimetro_cefalico'];

                        $clasificacion = clasificarCefalicoEdad(
                            $edadEnMeses,
                            $pcPaciente,
                            $longitudes,
                            $bandasZ
                        );

                        return [
                            'x' => $edadEnMeses,
                            'y' => $pcPaciente,
                            'fecha' => $item['hora_fin_atendio_consulta'],
                            'clasificacion' => $clasificacion,
                        ];
                    })->values()->all();
                } else {
                    $clasificacion = clasificarCefalicoEdad(
                        $edad,
                        $perimetroCefalico,
                        $longitudes,
                        $bandasZ
                    );
                    $intersecciones = $clasificacion;
                }
                $chartConfig = [
                    'type' => 'line',
                    'data' => [
                        'datasets' => [
                            [
                                'label' => 'Intersección',
                                'data' => $intersecciones,
                                'pointBackgroundColor' => 'blue',
                                'pointRadius' => 2,
                                'showLine' => true,
                                'borderDash' => [5, 5],
                                'fill' => false,
                                'datalabels' => [
                                    'display' => true,
                                    'align' => 'top',
                                    'anchor' => 'end',
                                    'color' => 'black',
                                    'rotation' => -90,
                                    'font' => [
                                        'weight' => 'bold',
                                        'size' => 10,
                                    ],
                                    'formatter' => "__FUNC__function(value) { return value.fecha; }__ENDFUNC__",

                                ],
                            ],
                            [
                                'label' => 'Z-2',
                                'data' => array_map(function ($x, $y) {
                                    return ['x' => $x, 'y' => $y];
                                }, $longitudes, $pesosZ_2),
                                'borderColor' => 'red',
                                'borderWidth' => 2,
                                'fill' => false,
                                'pointRadius' => 0
                            ],
                            [
                                'label' => 'Z-1',
                                'data' => array_map(function ($x, $y) {
                                    return ['x' => $x, 'y' => $y];
                                }, $longitudes, $pesosZ_1),
                                'borderColor' => 'orange',
                                'borderWidth' => 2,
                                'fill' => false,
                                'pointRadius' => 0
                            ],
                            [
                                'label' => 'Z0',
                                'data' => array_map(function ($x, $y) {
                                    return ['x' => $x, 'y' => $y];
                                }, $longitudes, $pesosZ0),
                                'borderColor' => 'green',
                                'borderWidth' => 2,
                                'fill' => false,
                                'pointRadius' => 0
                            ],
                            [
                                'label' => 'Z+1',
                                'data' => array_map(function ($x, $y) {
                                    return ['x' => $x, 'y' => $y];
                                }, $longitudes, $pesosZ1),
                                'borderColor' => 'orange',
                                'borderWidth' => 2,
                                'fill' => false,
                                'pointRadius' => 0
                            ],
                            [
                                'label' => 'Z+2',
                                'data' => array_map(function ($x, $y) {
                                    return ['x' => $x, 'y' => $y];
                                }, $longitudes, $pesosZ2),
                                'borderColor' => 'red',
                                'borderWidth' => 2,
                                'fill' => false,
                                'pointRadius' => 0
                            ],
                        ]
                    ],
                    'options' => [
                        'title' => [
                            'display' => true,
                            'text' => 'Curvas de crecimiento: Perímetro cefálico para la edad',

                        ],
                        'legend' => [
                            'display' => false,
                        ],
                        'scales' => [
                            'xAxes' => [[
                                'type' => 'linear',
                                'position' => 'bottom',
                                'scaleLabel' => [
                                    'display' => true,
                                    'labelString' => 'Edad en meses'
                                ],
                                // DE 0 A 5 AÑOS
                                'ticks' => [
                                    'min' => 0,
                                    'max' => 60,
                                    'stepSize' => 0.25,
                                    'callback' => '__FUNC__function(value) { return Number.isInteger(value) ? value : ""; }__ENDFUNC__'

                                ],
                                'gridLines' => [
                                    'drawTicks' => true,
                                    'color' => 'rgba(0, 0, 0, 0.1)',
                                    'lineWidth' => 0.5
                                ]
                            ]],
                            'yAxes' => [[
                                'scaleLabel' => [
                                    'display' => true,
                                    'labelString' => 'Perímetro cefálico (cm)'
                                ],
                                'ticks' => [
                                    // PARA NIÑOS DE 0 A 5 AÑOS
                                    'min' => 30,
                                    'max' => 56,
                                    'stepSize' => 2,
                                    'callback' => '__FUNC__function(value) { return Number.isInteger(value) ? value : ""; }__ENDFUNC__'
                                ],
                                'gridLines' => [
                                    'drawTicks' => true,
                                    'color' => 'rgba(0, 0, 0, 0.1)',
                                    'lineWidth' => 0.5
                                ]
                            ]]
                        ]
                    ]
                ];
                $nombreImagen = 'graficaPerimetroCefalico.png';
                if ($graficaHistoria == false) {
                    $this->generarPdfDesdeGrafica($chartConfig, $nombreImagen);
                }
                return $intersecciones;
            }
        }
    }

    // GRAFICAS IMC PARA LA EDAD

    public function generarGraficaIMC($request)
    {
        $peso = $request->peso;
        $altura = $request->talla;
        $afiliadoId = $request->afiliadoId;
        $edad = $request->edad;
        $sexo = $request->sexo;
        $fechaNacimiento = $request->fechaNacimiento;
        $graficaHistoria = $request->graficasHistoria;
        $imc = $request->imc;
        $consultaId = $request->consultaId;
        $datos = $this->graficasOmsRepository->obtenerDatos($afiliadoId, $consultaId);

        if ($imc != null && $datos != null) {

            // Curvas derivadas
            function curvaIMC($base, $desviacion)
            {
                return array_map(fn($v) => round($v + $desviacion, 1), $base);
            }

            $longitudes = [];
            $pesosZ3 =  [];
            $pesosZ2 =  [];
            $pesosZ1 =  [];
            $pesosZ0 =  [];
            $pesosZ_1 = [];
            $pesosZ_2 = [];
            $ticksX = [];
            $ticksY = [];
            $peso = (float)$peso;
            $altura = (float)$altura;

            if ($edad >= 0 && $edad <= 24) {
                $ticksX = [
                    'min' => 0,
                    'max' => 24,
                    'stepSize' => 1.25,
                    'callback' => '__FUNC__function(value) { return Number.isInteger(value) ? value : ""; }__ENDFUNC__'
                ];
            } else if ($edad > 24 && $edad <= 60) {
                $ticksX = [
                    'min' => 24,
                    'max' => 60,
                    'stepSize' => 1.25,
                    'callback' => '__FUNC__function(value) { return Number.isInteger(value) ? value : ""; }__ENDFUNC__'
                ];
            } else {
                $ticksX = [
                    'min' => 60,
                    'max' => 228,
                    'stepSize' => 1.25,
                    'callback' => '__FUNC__function(value) { return Number.isInteger(value) ? value : ""; }__ENDFUNC__'
                ];
            }

            if ($edad >= 0 && $edad <= 24) {
                $ticksY = [
                    'min' => 8,
                    'max' => 24,
                    'stepSize' => 1,
                    'callback' => '__FUNC__function(value) { return Number.isInteger(value) ? value : ""; }__ENDFUNC__'
                ];
            } else if ($edad > 24 && $edad <= 60) {
                $ticksY = [
                    'min' => 10,
                    'max' => 23,
                    'stepSize' => 1,
                    'callback' => '__FUNC__function(value) { return Number.isInteger(value) ? value : ""; }__ENDFUNC__'
                ];
            } else {
                $ticksY = [
                    'min' => 6,
                    'max' => 32,
                    'stepSize' => 2,
                    'callback' => '__FUNC__function(value) { return Number.isInteger(value) ? value : ""; }__ENDFUNC__'
                ];
            }

            if ($edad >= 0 && $edad <= 24 && $sexo == "M") {

                // IMC PARA LA EDAD 0 A 2 AÑOS (NIÑOS)
                $longitudes = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24];

                $pesosZ3  = [18.1, 19.4, 21.34, 21.84, 22.06, 22.18, 22.24, 22.2, 22.08, 21.94, 21.78, 21.62, 21.46, 21.32, 21.18, 21.04, 20.92, 20.8, 20.68, 20.58, 20.48, 20.38, 20.3, 20.3, 20.3];
                $pesosZ2  = [16.3, 17.8, 19.2, 19.64, 20.02, 20.26, 20.42, 20.44, 20.34, 20.2, 20.04, 19.88, 19.72, 19.56, 19.42, 19.28, 19.14, 19.0, 18.88, 18.78, 18.72, 18.66, 18.62, 18.6, 18.5];
                $pesosZ1  = [14.8, 16.3, 17.62, 18.24, 18.54, 18.66, 18.74, 18.7, 18.6, 18.48, 18.34, 18.2, 18.06, 17.92, 17.78, 17.66, 17.54, 17.42, 17.32, 17.22, 17.18, 17.14, 17.12, 17.1, 17.0];
                $pesosZ0 = [13.4, 14.9, 16.02, 16.64, 16.96, 17.1, 17.22, 17.28, 17.24, 17.14, 17.02, 16.88, 16.74, 16.6, 16.48, 16.34, 16.22, 16.12, 16.06, 15.98, 15.88, 15.8, 15.74, 15.7, 15.7];
                $pesosZ_1 = [12.2, 13.6, 14.72, 15.24, 15.6, 15.78, 15.86, 15.9, 15.82, 15.72, 15.62, 15.5, 15.38, 15.26, 15.16, 15.06, 14.96, 14.88, 14.8, 14.74, 14.7, 14.66, 14.6, 14.6, 14.6];
                $pesosZ_2 = [11.1, 12.4, 13.48, 14.1, 14.4, 14.6, 14.68, 14.76, 14.7, 14.64, 14.56, 14.46, 14.36, 14.26, 14.14, 14.04, 13.96, 13.9, 13.84, 13.78, 13.74, 13.68, 13.62, 13.6, 13.6];
            }

            if ($edad > 24 && $edad <= 60 && $sexo == "M") {
                // IMC PARA LA EDAD 2 A 5 AÑOS (NIÑOS)

                $longitudes = [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60];

                $pesosZ3  = [20.6, 20.5, 20.42, 20.36, 20.32, 20.26, 20.2, 20.16, 20.12, 20.08, 20.04, 20.0, 19.96, 19.92, 19.9, 19.9, 19.9, 19.86, 19.84, 19.82, 19.8, 19.8, 19.8, 19.84, 19.88, 19.9, 19.92, 19.94, 19.96, 19.98, 20.0, 20.04, 20.08, 20.12, 20.16, 20.2, 20.3];
                $pesosZ2  = [18.9, 18.8, 18.74, 18.68, 18.64, 18.58, 18.52, 18.48, 18.44, 18.4, 18.36, 18.34, 18.32, 18.28, 18.26, 18.24, 18.22, 18.22, 18.2, 18.18, 18.18, 18.18, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.22, 18.24, 18.26, 18.3, 18.3];
                $pesosZ1  = [17.3, 17.25, 17.22, 17.18, 17.14, 17.08, 17.04, 17.0, 16.96, 16.92, 16.88, 16.84, 16.8, 16.76, 16.74, 16.72, 16.72, 16.72, 16.7, 16.68, 16.68, 16.7, 16.7, 16.7, 16.7, 16.68, 16.66, 16.64, 16.62, 16.6, 16.6, 16.6, 16.6, 16.6, 16.6, 16.6, 16.6];
                $pesosZ0 = [16.0, 15.95, 15.88, 15.84, 15.8, 15.74, 15.7, 15.66, 15.62, 15.58, 15.54, 15.5, 15.46, 15.44, 15.42, 15.4, 15.38, 15.36, 15.34, 15.32, 15.3, 15.3, 15.3, 15.3, 15.3, 15.3, 15.3, 15.3, 15.28, 15.26, 15.24, 15.22, 15.2, 15.2, 15.2, 15.2, 15.2];
                $pesosZ_1 = [14.8, 14.75, 14.72, 14.68, 14.64, 14.58, 14.54, 14.5, 14.46, 14.42, 14.38, 14.34, 14.3, 14.28, 14.26, 14.22, 14.2, 14.18, 14.16, 14.14, 14.12, 14.1, 14.1, 14.1, 14.1, 14.1, 14.1, 14.08, 14.06, 14.04, 14.02, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0];
                $pesosZ_2 = [13.8, 13.7, 13.66, 13.6, 13.54, 13.48, 13.44, 13.4, 13.36, 13.32, 13.28, 13.24, 13.2, 13.16, 13.14, 13.12, 13.1, 13.08, 13.06, 13.04, 13.02, 13.02, 13.02, 13.0, 13.0, 13.0, 13.0, 13.0, 13.0, 13.0, 12.98, 12.96, 12.94, 12.92, 12.9, 12.9, 12.9];
            }

            if ($edad >= 0 && $edad <= 24 && $sexo == "F") {
                // IMC PARA LA EDAD 0 A 2 AÑOS (NIÑAS)

                $longitudes = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24];

                $pesosZ3  = [17.7, 19.1, 20.7, 21.62, 22.04, 22.18, 22.24, 22.22, 22.14, 22.02, 21.84, 21.68, 21.52, 21.36, 21.2, 21.06, 20.94, 20.82, 20.7, 20.6, 20.5, 20.44, 20.4, 20.4, 20.3];
                $pesosZ2  = [16.1, 17.5, 19.0, 19.64, 20.04, 20.22, 20.3, 20.28, 20.18, 20.04, 19.86, 19.7, 19.54, 19.38, 19.24, 19.12, 19.0, 18.88, 18.78, 18.7, 18.64, 18.58, 18.52, 18.5, 18.4];
                $pesosZ1  = [14.6, 16.0, 17.3, 17.88, 18.26, 18.38, 18.48, 18.46, 18.36, 18.24, 18.1, 17.96, 17.82, 17.68, 17.56, 17.44, 17.34, 17.24, 17.14, 17.06, 17.0, 16.96, 16.92, 16.9, 16.8];
                $pesosZ0 = [13.3, 14.6, 15.8, 16.36, 16.66, 16.8, 16.86, 16.86, 16.78, 16.66, 16.54, 16.4, 16.26, 16.12, 16.0, 15.88, 15.78, 15.68, 15.6, 15.54, 15.48, 15.44, 15.4, 15.4, 15.4];
                $pesosZ_1 = [12.2, 13.2, 14.3, 14.86, 15.18, 15.34, 15.46, 15.46, 15.38, 15.26, 15.14, 15.02, 14.9, 14.78, 14.68, 14.58, 14.48, 14.38, 14.3, 14.26, 14.22, 14.18, 14.16, 14.2, 14.2];
                $pesosZ_2 = [11.1, 12.0, 13.0, 13.54, 13.84, 14.04, 14.1, 14.16, 14.1, 14.06, 13.98, 13.88, 13.78, 13.66, 13.56, 13.48, 13.4, 13.34, 13.28, 13.24, 13.18, 13.16, 13.12, 13.1, 13.1];
            }

            if ($edad > 24 && $edad <= 60 && $sexo == "F") {
                // IMC PARA LA EDAD 2 A 5 AÑOS (NIÑAS)

                $longitudes = [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60];

                $pesosZ3  = [20.6, 20.5, 20.44, 20.36, 20.32, 20.28, 20.24, 20.2, 20.16, 20.12, 20.08, 20.04, 20.0, 19.96, 19.92, 19.9, 19.88, 19.86, 19.84, 19.82, 19.8, 19.8, 19.8, 19.84, 19.88, 19.9, 19.92, 19.94, 19.96, 19.98, 20.0, 20.04, 20.08, 20.12, 20.16, 20.2, 20.3];
                $pesosZ2  = [18.9, 18.8, 18.72, 18.66, 18.62, 18.58, 18.54, 18.5, 18.46, 18.42, 18.38, 18.34, 18.32, 18.28, 18.26, 18.24, 18.22, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.22, 18.24, 18.26, 18.3, 18.3];
                $pesosZ1  = [17.3, 17.25, 17.18, 17.14, 17.1, 17.06, 17.02, 16.98, 16.94, 16.9, 16.86, 16.82, 16.78, 16.76, 16.74, 16.72, 16.7, 16.7, 16.7, 16.7, 16.7, 16.7, 16.7, 16.7, 16.7, 16.68, 16.66, 16.64, 16.62, 16.6, 16.6, 16.6, 16.6, 16.6, 16.6, 16.6, 16.6];
                $pesosZ0 = [16.0, 15.95, 15.86, 15.8, 15.76, 15.7, 15.66, 15.62, 15.58, 15.54, 15.5, 15.46, 15.44, 15.42, 15.4, 15.38, 15.36, 15.34, 15.32, 15.3, 15.3, 15.3, 15.3, 15.3, 15.3, 15.3, 15.3, 15.28, 15.26, 15.24, 15.22, 15.2, 15.2, 15.2, 15.2, 15.2, 15.2];
                $pesosZ_1 = [14.8, 14.75, 14.68, 14.64, 14.6, 14.56, 14.52, 14.48, 14.44, 14.4, 14.36, 14.32, 14.28, 14.26, 14.24, 14.22, 14.2, 14.18, 14.16, 14.14, 14.12, 14.1, 14.1, 14.1, 14.1, 14.1, 14.08, 14.06, 14.04, 14.02, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0];
                $pesosZ_2 = [13.8, 13.7, 13.62, 13.56, 13.52, 13.48, 13.44, 13.4, 13.36, 13.32, 13.28, 13.24, 13.2, 13.18, 13.16, 13.14, 13.12, 13.1, 13.08, 13.06, 13.04, 13.02, 13.02, 13.0, 13.0, 13.0, 13.0, 13.0, 13.0, 13.0, 12.98, 12.96, 12.94, 12.92, 12.9, 12.9, 12.9];
            }

            if ($edad > 60 && $edad <= 204 && $sexo == "M") {
                // IMC PARA LA EDAD 5 A 17 AÑOS (NIÑOS)

                $longitudes = [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228];

                $pesosZ3  = [18.259, 18.273, 18.29, 18.308, 18.328, 18.35, 18.374, 18.399, 18.427, 18.456, 18.487, 18.52, 18.554, 18.589, 18.626, 18.665, 18.704, 18.745, 18.788, 18.831, 18.876, 18.922, 18.969, 19.017, 19.066, 19.116, 19.168, 19.22, 19.274, 19.328, 19.383, 19.44, 19.497, 19.555, 19.615, 19.675, 19.736, 19.798, 19.862, 19.926, 19.99, 20.056, 20.123, 20.19, 20.258, 20.327, 20.397, 20.468, 20.54, 20.613, 20.687, 20.763, 20.839, 20.916, 20.994, 21.074, 21.154, 21.234, 21.317, 21.4, 21.483, 21.568, 21.653, 21.739, 21.826, 21.914, 22.002, 22.09, 22.18, 22.271, 22.362, 22.452, 22.544, 22.637, 22.729, 22.822, 22.915, 23.009, 23.104, 23.199, 23.293, 23.389, 23.485, 23.581, 23.677, 23.774, 23.871, 23.969, 24.067, 24.165, 24.263, 24.362, 24.46, 24.559, 24.658, 24.757, 24.856, 24.954, 25.053, 25.152, 25.249, 25.347, 25.444, 25.54, 25.635, 25.731, 25.825, 25.918, 26.011, 26.103, 26.194, 26.284, 26.373, 26.462, 26.549, 26.635, 26.72, 26.804, 26.887, 26.969, 27.051, 27.13, 27.21, 27.288, 27.365, 27.441, 27.515, 27.59, 27.662, 27.734, 27.805, 27.875, 27.943, 28.011, 28.078, 28.143, 28.207, 28.271, 28.334, 28.395, 28.456, 28.515, 28.573, 28.63, 28.687, 28.742, 28.797, 28.85, 28.903, 28.954, 29.005, 29.054, 29.103, 29.15, 29.197, 29.243, 29.287, 29.331, 29.373, 29.415, 29.455, 29.496, 29.534, 29.572, 29.609, 29.646, 29.681, 29.716];
                $pesosZ2  = [16.645, 16.648, 16.653, 16.659, 16.667, 16.676, 16.686, 16.699, 16.712, 16.727, 16.743, 16.761, 16.78, 16.799, 16.82, 16.842, 16.864, 16.888, 16.913, 16.938, 16.964, 16.991, 17.019, 17.047, 17.076, 17.106, 17.136, 17.167, 17.199, 17.231, 17.264, 17.297, 17.331, 17.366, 17.401, 17.437, 17.473, 17.51, 17.548, 17.586, 17.624, 17.663, 17.702, 17.742, 17.783, 17.824, 17.866, 17.908, 17.952, 17.996, 18.04, 18.086, 18.132, 18.179, 18.227, 18.276, 18.326, 18.376, 18.428, 18.48, 18.532, 18.586, 18.64, 18.696, 18.751, 18.808, 18.865, 18.923, 18.982, 19.042, 19.102, 19.163, 19.224, 19.287, 19.349, 19.413, 19.477, 19.542, 19.607, 19.674, 19.741, 19.808, 19.877, 19.946, 20.015, 20.086, 20.157, 20.229, 20.302, 20.375, 20.449, 20.524, 20.599, 20.675, 20.751, 20.829, 20.906, 20.984, 21.062, 21.14, 21.219, 21.298, 21.376, 21.455, 21.534, 21.613, 21.691, 21.77, 21.848, 21.926, 22.004, 22.081, 22.158, 22.235, 22.311, 22.387, 22.462, 22.537, 22.611, 22.685, 22.758, 22.831, 22.903, 22.975, 23.046, 23.116, 23.186, 23.255, 23.324, 23.391, 23.459, 23.525, 23.591, 23.656, 23.721, 23.785, 23.847, 23.91, 23.972, 24.032, 24.093, 24.152, 24.211, 24.269, 24.327, 24.383, 24.439, 24.494, 24.549, 24.603, 24.656, 24.708, 24.76, 24.811, 24.861, 24.911, 24.959, 25.008, 25.055, 25.102, 25.147, 25.193, 25.237, 25.281, 25.324, 25.366, 25.408, 25.449];
                $pesosZ1  = [15.264, 15.262, 15.26, 15.26, 15.262, 15.264, 15.268, 15.274, 15.28, 15.288, 15.296, 15.306, 15.317, 15.328, 15.341, 15.354, 15.368, 15.382, 15.398, 15.414, 15.43, 15.447, 15.465, 15.483, 15.502, 15.521, 15.541, 15.561, 15.581, 15.602, 15.624, 15.646, 15.668, 15.69, 15.713, 15.737, 15.761, 15.785, 15.809, 15.834, 15.86, 15.886, 15.912, 15.938, 15.965, 15.992, 16.02, 16.049, 16.078, 16.108, 16.138, 16.169, 16.201, 16.233, 16.266, 16.3, 16.335, 16.37, 16.406, 16.443, 16.481, 16.519, 16.558, 16.597, 16.638, 16.679, 16.72, 16.763, 16.806, 16.85, 16.894, 16.939, 16.985, 17.031, 17.078, 17.126, 17.175, 17.224, 17.273, 17.324, 17.375, 17.427, 17.48, 17.533, 17.588, 17.643, 17.698, 17.755, 17.812, 17.87, 17.929, 17.989, 18.049, 18.11, 18.171, 18.233, 18.296, 18.359, 18.422, 18.486, 18.55, 18.615, 18.68, 18.744, 18.81, 18.875, 18.94, 19.005, 19.07, 19.135, 19.2, 19.265, 19.329, 19.394, 19.458, 19.522, 19.585, 19.649, 19.712, 19.774, 19.837, 19.899, 19.96, 20.022, 20.082, 20.143, 20.203, 20.262, 20.321, 20.38, 20.438, 20.495, 20.552, 20.608, 20.664, 20.72, 20.774, 20.829, 20.882, 20.936, 20.988, 21.04, 21.091, 21.142, 21.192, 21.242, 21.291, 21.34, 21.388, 21.435, 21.482, 21.528, 21.574, 21.619, 21.664, 21.708, 21.751, 21.794, 21.836, 21.877, 21.918, 21.958, 21.998, 22.037, 22.076, 22.114, 22.151, 22.188];
                $pesosZ0 = [14.071, 14.066, 14.063, 14.061, 14.06, 14.06, 14.061, 14.063, 14.067, 14.071, 14.077, 14.083, 14.09, 14.098, 14.107, 14.116, 14.126, 14.136, 14.147, 14.158, 14.17, 14.183, 14.195, 14.209, 14.222, 14.236, 14.25, 14.265, 14.28, 14.295, 14.311, 14.327, 14.343, 14.36, 14.377, 14.394, 14.412, 14.429, 14.447, 14.466, 14.484, 14.503, 14.523, 14.542, 14.562, 14.582, 14.603, 14.624, 14.646, 14.668, 14.691, 14.714, 14.738, 14.763, 14.788, 14.814, 14.84, 14.867, 14.895, 14.923, 14.952, 14.982, 15.012, 15.043, 15.074, 15.106, 15.139, 15.172, 15.206, 15.241, 15.276, 15.312, 15.348, 15.385, 15.422, 15.461, 15.499, 15.539, 15.578, 15.619, 15.66, 15.702, 15.745, 15.788, 15.833, 15.877, 15.923, 15.969, 16.016, 16.063, 16.112, 16.161, 16.21, 16.26, 16.311, 16.362, 16.414, 16.466, 16.519, 16.572, 16.625, 16.679, 16.733, 16.787, 16.841, 16.895, 16.95, 17.004, 17.058, 17.113, 17.167, 17.221, 17.275, 17.329, 17.382, 17.435, 17.489, 17.541, 17.594, 17.647, 17.699, 17.75, 17.802, 17.853, 17.904, 17.954, 18.004, 18.053, 18.103, 18.151, 18.199, 18.247, 18.295, 18.342, 18.388, 18.434, 18.479, 18.524, 18.568, 18.612, 18.655, 18.698, 18.741, 18.782, 18.823, 18.864, 18.904, 18.944, 18.983, 19.022, 19.06, 19.097, 19.134, 19.171, 19.207, 19.242, 19.277, 19.311, 19.344, 19.377, 19.41, 19.442, 19.473, 19.504, 19.535, 19.564, 19.594, 19.622];
                $pesosZ_1 = [13.031, 13.027, 13.024, 13.022, 13.021, 13.021, 13.021, 13.023, 13.026, 13.03, 13.035, 13.04, 13.047, 13.053, 13.061, 13.069, 13.077, 13.086, 13.095, 13.105, 13.115, 13.126, 13.136, 13.148, 13.159, 13.171, 13.183, 13.195, 13.208, 13.221, 13.234, 13.247, 13.26, 13.274, 13.288, 13.302, 13.317, 13.331, 13.346, 13.361, 13.376, 13.392, 13.408, 13.424, 13.44, 13.456, 13.473, 13.491, 13.508, 13.526, 13.545, 13.564, 13.583, 13.603, 13.624, 13.645, 13.667, 13.689, 13.712, 13.735, 13.759, 13.784, 13.808, 13.834, 13.86, 13.886, 13.913, 13.941, 13.969, 13.998, 14.027, 14.056, 14.087, 14.117, 14.148, 14.18, 14.212, 14.245, 14.278, 14.312, 14.347, 14.382, 14.417, 14.453, 14.49, 14.528, 14.566, 14.605, 14.644, 14.684, 14.724, 14.766, 14.807, 14.849, 14.892, 14.935, 14.979, 15.023, 15.067, 15.112, 15.157, 15.202, 15.247, 15.293, 15.338, 15.384, 15.429, 15.475, 15.521, 15.566, 15.611, 15.657, 15.702, 15.747, 15.791, 15.836, 15.88, 15.924, 15.968, 16.011, 16.054, 16.097, 16.14, 16.182, 16.224, 16.265, 16.306, 16.347, 16.387, 16.427, 16.466, 16.505, 16.543, 16.581, 16.619, 16.656, 16.692, 16.728, 16.763, 16.798, 16.833, 16.867, 16.9, 16.933, 16.965, 16.997, 17.028, 17.059, 17.089, 17.118, 17.147, 17.176, 17.204, 17.231, 17.258, 17.284, 17.31, 17.335, 17.36, 17.383, 17.407, 17.429, 17.452, 17.473, 17.495, 17.515, 17.535, 17.554];
                $pesosZ_2 = [];
            }

            if ($edad > 60 && $edad <= 204 && $sexo == "F") {
                // IMC PARA LA EDAD 5 A 17 AÑOS (NIÑAS)

                $longitudes = [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228];

                $pesosZ3  = [16.87, 16.879, 16.889, 16.9, 16.911, 16.923, 16.936, 16.95, 16.964, 16.979, 16.995, 17.011, 17.029, 17.047, 17.067, 17.087, 17.108, 17.131, 17.154, 17.179, 17.204, 17.231, 17.259, 17.289, 17.319, 17.35, 17.383, 17.417, 17.452, 17.488, 17.526, 17.564, 17.604, 17.645, 17.687, 17.73, 17.774, 17.82, 17.866, 17.914, 17.962, 18.012, 18.062, 18.113, 18.166, 18.219, 18.272, 18.326, 18.381, 18.437, 18.493, 18.551, 18.608, 18.666, 18.725, 18.785, 18.846, 18.907, 18.969, 19.032, 19.096, 19.161, 19.226, 19.293, 19.36, 19.429, 19.498, 19.568, 19.639, 19.712, 19.785, 19.859, 19.933, 20.009, 20.086, 20.163, 20.241, 20.32, 20.4, 20.48, 20.561, 20.642, 20.724, 20.806, 20.889, 20.972, 21.055, 21.138, 21.222, 21.305, 21.388, 21.471, 21.554, 21.637, 21.719, 21.8, 21.882, 21.962, 22.042, 22.122, 22.201, 22.279, 22.357, 22.433, 22.509, 22.584, 22.658, 22.731, 22.803, 22.874, 22.943, 23.012, 23.079, 23.145, 23.21, 23.273, 23.336, 23.396, 23.456, 23.514, 23.57, 23.625, 23.679, 23.731, 23.782, 23.832, 23.88, 23.927, 23.972, 24.017, 24.06, 24.101, 24.141, 24.18, 24.218, 24.254, 24.29, 24.324, 24.356, 24.388, 24.418, 24.448, 24.476, 24.503, 24.53, 24.555, 24.58, 24.603, 24.626, 24.649, 24.67, 24.691, 24.712, 24.731, 24.75, 24.769, 24.788, 24.805, 24.823, 24.84, 24.856, 24.873, 24.889, 24.905, 24.92, 24.935, 24.951, 24.965];
                $pesosZ2  = [15.244, 15.243, 15.243, 15.244, 15.245, 15.246, 15.249, 15.252, 15.255, 15.259, 15.264, 15.27, 15.276, 15.283, 15.291, 15.3, 15.31, 15.32, 15.331, 15.344, 15.357, 15.372, 15.387, 15.404, 15.421, 15.44, 15.459, 15.48, 15.501, 15.524, 15.548, 15.572, 15.598, 15.625, 15.652, 15.681, 15.711, 15.742, 15.773, 15.806, 15.839, 15.874, 15.909, 15.945, 15.982, 16.019, 16.058, 16.096, 16.136, 16.176, 16.217, 16.258, 16.3, 16.343, 16.386, 16.43, 16.475, 16.52, 16.566, 16.613, 16.661, 16.71, 16.76, 16.81, 16.861, 16.914, 16.967, 17.021, 17.076, 17.132, 17.188, 17.246, 17.304, 17.364, 17.424, 17.485, 17.546, 17.609, 17.672, 17.736, 17.8, 17.865, 17.931, 17.997, 18.063, 18.13, 18.197, 18.264, 18.331, 18.399, 18.466, 18.533, 18.601, 18.668, 18.735, 18.801, 18.868, 18.934, 18.999, 19.064, 19.129, 19.193, 19.257, 19.32, 19.382, 19.444, 19.504, 19.565, 19.624, 19.682, 19.74, 19.797, 19.852, 19.907, 19.961, 20.013, 20.065, 20.115, 20.164, 20.212, 20.26, 20.305, 20.35, 20.393, 20.436, 20.477, 20.517, 20.556, 20.594, 20.631, 20.666, 20.701, 20.734, 20.767, 20.798, 20.829, 20.858, 20.886, 20.914, 20.94, 20.966, 20.99, 21.014, 21.037, 21.059, 21.08, 21.101, 21.121, 21.14, 21.159, 21.177, 21.194, 21.212, 21.228, 21.244, 21.26, 21.276, 21.291, 21.306, 21.32, 21.334, 21.348, 21.362, 21.375, 21.388, 21.401, 21.414, 21.427];
                $pesosZ1  = [13.891, 13.885, 13.881, 13.876, 13.872, 13.869, 13.866, 13.864, 13.863, 13.862, 13.862, 13.862, 13.863, 13.865, 13.867, 13.87, 13.874, 13.879, 13.885, 13.892, 13.899, 13.907, 13.916, 13.927, 13.938, 13.95, 13.963, 13.976, 13.991, 14.007, 14.023, 14.041, 14.059, 14.078, 14.099, 14.12, 14.142, 14.164, 14.188, 14.212, 14.238, 14.264, 14.291, 14.318, 14.346, 14.375, 14.404, 14.434, 14.465, 14.496, 14.527, 14.559, 14.592, 14.625, 14.659, 14.694, 14.729, 14.764, 14.801, 14.838, 14.876, 14.914, 14.954, 14.994, 15.035, 15.076, 15.119, 15.162, 15.206, 15.251, 15.297, 15.343, 15.39, 15.438, 15.487, 15.536, 15.586, 15.637, 15.688, 15.74, 15.793, 15.846, 15.899, 15.953, 16.008, 16.062, 16.117, 16.172, 16.227, 16.282, 16.338, 16.393, 16.448, 16.503, 16.558, 16.612, 16.667, 16.721, 16.775, 16.828, 16.881, 16.934, 16.986, 17.037, 17.088, 17.139, 17.188, 17.238, 17.286, 17.334, 17.38, 17.427, 17.472, 17.516, 17.56, 17.603, 17.644, 17.685, 17.725, 17.764, 17.802, 17.839, 17.874, 17.909, 17.943, 17.976, 18.008, 18.039, 18.069, 18.098, 18.126, 18.153, 18.179, 18.205, 18.229, 18.253, 18.275, 18.297, 18.318, 18.338, 18.357, 18.376, 18.393, 18.411, 18.427, 18.443, 18.458, 18.472, 18.486, 18.499, 18.512, 18.525, 18.537, 18.548, 18.56, 18.571, 18.581, 18.592, 18.601, 18.611, 18.621, 18.63, 18.639, 18.648, 18.657, 18.665, 18.673, 18.681];
                $pesosZ0 = [12.748, 12.741, 12.734, 12.728, 12.723, 12.718, 12.714, 12.71, 12.706, 12.703, 12.701, 12.7, 12.699, 12.698, 12.699, 12.7, 12.701, 12.704, 12.707, 12.711, 12.716, 12.721, 12.728, 12.735, 12.743, 12.752, 12.762, 12.772, 12.783, 12.795, 12.808, 12.822, 12.836, 12.852, 12.868, 12.884, 12.902, 12.92, 12.94, 12.959, 12.98, 13.001, 13.023, 13.045, 13.068, 13.092, 13.115, 13.14, 13.165, 13.19, 13.216, 13.242, 13.269, 13.296, 13.323, 13.352, 13.38, 13.41, 13.439, 13.47, 13.501, 13.533, 13.565, 13.598, 13.631, 13.666, 13.7, 13.736, 13.772, 13.81, 13.847, 13.885, 13.925, 13.964, 14.004, 14.045, 14.087, 14.129, 14.171, 14.214, 14.258, 14.302, 14.346, 14.391, 14.436, 14.481, 14.526, 14.572, 14.618, 14.663, 14.709, 14.755, 14.8, 14.846, 14.891, 14.936, 14.981, 15.025, 15.07, 15.113, 15.157, 15.2, 15.243, 15.285, 15.327, 15.368, 15.408, 15.448, 15.488, 15.526, 15.564, 15.601, 15.638, 15.674, 15.709, 15.743, 15.776, 15.809, 15.841, 15.871, 15.901, 15.93, 15.958, 15.985, 16.012, 16.037, 16.062, 16.085, 16.108, 16.13, 16.151, 16.172, 16.191, 16.21, 16.228, 16.245, 16.261, 16.277, 16.291, 16.305, 16.318, 16.331, 16.343, 16.354, 16.365, 16.375, 16.384, 16.393, 16.401, 16.409, 16.417, 16.424, 16.431, 16.437, 16.443, 16.448, 16.454, 16.459, 16.463, 16.468, 16.473, 16.477, 16.48, 16.484, 16.488, 16.491, 16.494, 16.497];
                $pesosZ_1 = [11.77, 11.763, 11.757, 11.752, 11.746, 11.742, 11.737, 11.733, 11.73, 11.727, 11.725, 11.723, 11.722, 11.721, 11.721, 11.722, 11.723, 11.725, 11.727, 11.731, 11.735, 11.74, 11.745, 11.751, 11.758, 11.766, 11.774, 11.783, 11.793, 11.803, 11.814, 11.826, 11.838, 11.851, 11.865, 11.879, 11.895, 11.91, 11.927, 11.944, 11.962, 11.98, 11.998, 12.018, 12.037, 12.057, 12.078, 12.099, 12.12, 12.141, 12.163, 12.185, 12.208, 12.231, 12.254, 12.278, 12.302, 12.327, 12.352, 12.378, 12.404, 12.43, 12.458, 12.485, 12.514, 12.542, 12.572, 12.602, 12.632, 12.663, 12.695, 12.727, 12.76, 12.793, 12.827, 12.861, 12.896, 12.931, 12.967, 13.003, 13.04, 13.077, 13.114, 13.151, 13.189, 13.227, 13.265, 13.303, 13.341, 13.379, 13.418, 13.456, 13.494, 13.531, 13.569, 13.606, 13.643, 13.68, 13.717, 13.753, 13.788, 13.824, 13.859, 13.893, 13.927, 13.961, 13.994, 14.026, 14.058, 14.089, 14.119, 14.149, 14.179, 14.207, 14.235, 14.262, 14.288, 14.314, 14.338, 14.362, 14.385, 14.408, 14.429, 14.45, 14.469, 14.488, 14.507, 14.524, 14.541, 14.557, 14.572, 14.586, 14.6, 14.613, 14.625, 14.636, 14.647, 14.656, 14.666, 14.674, 14.682, 14.689, 14.695, 14.701, 14.707, 14.711, 14.716, 14.719, 14.722, 14.725, 14.728, 14.73, 14.731, 14.733, 14.734, 14.734, 14.735, 14.735, 14.735, 14.734, 14.734, 14.733, 14.732, 14.731, 14.729, 14.728, 14.726, 14.724];
                $pesosZ_2 = [];
            }

            $bandasZ = [
                '+3' => $pesosZ3,
                '+2' => $pesosZ2,
                '+1' => $pesosZ1,
                '0' => $pesosZ0,
                '-1' => $pesosZ_1,
                '-2' => $pesosZ_2,
            ];

            function interpolarValorImc($edadPaciente, $edades, $valores)
            {
                if (!is_array($edades) || !is_array($valores)) {
                    throw new InvalidArgumentException('Se esperaban arrays');
                }

                $n = count($edades);

                if ($edadPaciente <= $edades[0]) return $valores[0];
                if ($edadPaciente >= $edades[$n - 1]) return $valores[$n - 1];

                for ($i = 0; $i < $n - 1; $i++) {
                    if (!array_key_exists($i, $valores) || !array_key_exists($i + 1, $valores)) {
                        continue;
                    }

                    $x1 = $edades[$i];
                    $x2 = $edades[$i + 1];

                    if ($edadPaciente >= $x1 && $edadPaciente <= $x2) {
                        $y1 = $valores[$i];
                        $y2 = $valores[$i + 1];

                        return $y1 + ($y2 - $y1) * ($edadPaciente - $x1) / ($x2 - $x1);
                    }
                }
                return null;
            }
            function clasificarIMCEdad($edadPaciente, $imcPaciente, $edades, $bandasZ)
            {
                $valoresZ = [];
                foreach ($bandasZ as $z => $valores) {
                    $valoresZ[$z] = interpolarValorImc($edadPaciente, $edades, $valores);
                }

                if ($imcPaciente > $valoresZ['+2']) {
                    return "Obesidad - >Z+2";
                } elseif ($imcPaciente <= $valoresZ['+2'] && $imcPaciente > $valoresZ['+1']) {
                    return "Sobrepeso - <=Z+2 a >Z+1";
                } elseif ($imcPaciente <= $valoresZ['+1'] && $imcPaciente > $valoresZ['-1']) {
                    return "Normal - <=Z+1 a >Z-1";
                } elseif ($imcPaciente <= $valoresZ['-1'] && $imcPaciente > $valoresZ['-2']) {
                    return "Delgadez - <=Z-1 a >Z-2";
                } elseif ($imcPaciente <= $valoresZ['-2']) {
                    return "Delgadez Grave - <=Z-2";
                }
                return "Sin Clasificación";
            }

            if ($graficaHistoria != true) {
                $intersecciones = $datos->map(function ($item) use ($fechaNacimiento, $longitudes, $bandasZ) {
                    $nacimiento = Carbon::parse($fechaNacimiento);
                    $fechaConsulta = Carbon::createFromFormat('d/m/Y', $item['hora_fin_atendio_consulta']);
                    $edadEnMeses = $nacimiento->diffInMonths($fechaConsulta);
                    $imcPaciente = (float) $item['imc'];

                    $clasificacion = clasificarIMCEdad(
                        $edadEnMeses,
                        $imcPaciente,
                        $longitudes,
                        $bandasZ
                    );

                    return [
                        'x' => $edadEnMeses,
                        'y' => $imcPaciente,
                        'fecha' => $item['hora_fin_atendio_consulta'],
                        'clasificacion' => $clasificacion,
                    ];
                })->values()->all();
            } else {
                $clasificacion = clasificarIMCEdad(
                    $edad,
                    $imc,
                    $longitudes,
                    $bandasZ
                );
                $intersecciones = $clasificacion;
            }
            $chartConfig = [
                'type' => 'line',
                'data' => [
                    'datasets' => [
                        [
                            'label' => 'Intersección',
                            'data' => $intersecciones,
                            'pointBackgroundColor' => 'blue',
                            'pointRadius' => 2,
                            'showLine' => true,
                            'fill' => false,
                            'borderDash' => [5, 5],
                            'datalabels' => [
                                'display' => true,
                                'align' => 'top',
                                'anchor' => 'end',
                                'color' => 'black',
                                'rotation' => -90,
                                'font' => [
                                    'weight' => 'bold',
                                    'size' => 10,
                                ],
                                'formatter' => "__FUNC__function(value) { return value.fecha; }__ENDFUNC__",
                            ],
                        ],
                        [
                            'label' => 'Z-2',
                            'data' => array_map(function ($x, $y) {
                                return ['x' => $x, 'y' => $y];
                            }, $longitudes, $pesosZ_2),
                            'borderColor' => '#001256',
                            'borderWidth' => 2,
                            'fill' => false,
                            'pointRadius' => 0
                        ],
                        [
                            'label' => 'Z-1',
                            'data' => array_map(function ($x, $y) {
                                return ['x' => $x, 'y' => $y];
                            }, $longitudes, $pesosZ_1),
                            'borderColor' => '#001256',
                            'borderWidth' => 2,
                            'fill' => false,
                            'pointRadius' => 0
                        ],
                        [
                            'label' => 'Z0',
                            'data' => array_map(function ($x, $y) {
                                return ['x' => $x, 'y' => $y];
                            }, $longitudes, $pesosZ0),
                            'borderColor' => 'green',
                            'borderWidth' => 2,
                            'fill' => false,
                            'pointRadius' => 0
                        ],
                        [
                            'label' => 'Z+1',
                            'data' => array_map(function ($x, $y) {
                                return ['x' => $x, 'y' => $y];
                            }, $longitudes, $pesosZ1),
                            'borderColor' => 'orange',
                            'borderWidth' => 2,
                            'fill' => false,
                            'pointRadius' => 0
                        ],
                        [
                            'label' => 'Z+2',
                            'data' => array_map(function ($x, $y) {
                                return ['x' => $x, 'y' => $y];
                            }, $longitudes, $pesosZ2),
                            'borderColor' => 'red',
                            'borderDash' => [5, 5],
                            'borderWidth' => 2,
                            'fill' => false,
                            'pointRadius' => 0
                        ],
                        [
                            'label' => 'Z+3',
                            'data' => array_map(function ($x, $y) {
                                return ['x' => $x, 'y' => $y];
                            }, $longitudes, $pesosZ3),
                            'borderColor' => 'red',
                            'borderWidth' => 2,
                            'fill' => false,
                            'pointRadius' => 0
                        ],
                    ]
                ],
                'options' => [
                    'title' => [
                        'display' => true,
                        'text' => 'Curvas de crecimiento: IMC para la edad',
                    ],
                    'legend' => [
                        'display' => false,
                    ],
                    'scales' => [
                        'xAxes' => [[
                            'type' => 'linear',
                            'position' => 'bottom',
                            'scaleLabel' => [
                                'display' => true,
                                'labelString' => 'Edad en meses'
                            ],
                            'ticks' => $ticksX,
                            'gridLines' => [
                                'drawTicks' => true,
                                'color' => 'rgba(0, 0, 0, 0.1)',
                                'lineWidth' => 0.5
                            ]
                        ]],
                        'yAxes' => [[
                            'scaleLabel' => [
                                'display' => true,
                                'labelString' => 'IMC (kg/m2)'
                            ],
                            'ticks' => $ticksY,
                            'gridLines' => [
                                'drawTicks' => true,
                                'color' => 'rgba(0, 0, 0, 0.1)',
                                'lineWidth' => 0.5
                            ]
                        ]]
                    ]
                ]
            ];
            $nombreImagen = 'graficaIMC.png';
            if ($graficaHistoria == false) {
                $this->generarPdfDesdeGrafica($chartConfig, $nombreImagen);
            }
            return $intersecciones;
        }
    }

    // GRAFICAS PESO PARA LA EDAD

    public function generarGraficaPesoEdad($request)
    {
        $peso = $request->peso;
        $altura = $request->talla;
        $afiliadoId = $request->afiliadoId;
        $edad = $request->edad;
        $sexo = $request->sexo;
        $fechaNacimiento = $request->fechaNacimiento;
        $graficaHistoria = $request->graficasHistoria;
        $consultaId = $request->consultaId;
        $datos = $this->graficasOmsRepository->obtenerDatos($afiliadoId, $consultaId);

        // dd($datos);

        if ($peso != null && $edad != null && $datos != null) {

            if ($edad >= 0 && $edad <= 60) {

                // Curvas derivadas
                function curvaPesoEdad($base, $desviacion)
                {
                    return array_map(fn($v) => round($v + $desviacion, 1), $base);
                }
                $longitudes = [];
                $pesosZ2 = [];
                $pesosZ1 =  [];
                $pesosZ0 =  [];
                $pesosZ_1 = [];
                $pesosZ_2 = [];
                $ticksX = [];
                $ticksY = [];
                $peso = (float)$peso;
                $altura = (float)$altura;

                if ($edad >= 0 && $edad <= 24) {
                    $ticksX = [
                        'min' => 0,
                        'max' => 24,
                        'stepSize' => 1.25,
                        'callback' => '__FUNC__function(value) { return Number.isInteger(value) ? value : ""; }__ENDFUNC__'
                    ];
                } else if ($edad > 24 && $edad <= 60) {
                    $ticksX = [
                        'min' => 24,
                        'max' => 60,
                        'stepSize' => 1.25,
                        'callback' => '__FUNC__function(value) { return Number.isInteger(value) ? value : ""; }__ENDFUNC__'
                    ];
                }
                if ($edad >= 0 && $edad <= 24) {
                    $ticksY = [
                        'min' => 1,
                        'max' => 18,
                        'stepSize' => 1,
                        'callback' => '__FUNC__function(value) { return Number.isInteger(value) ? value : ""; }__ENDFUNC__'
                    ];
                } else if ($edad > 24 && $edad <= 60) {
                    $ticksY = [
                        'min' => 7,
                        'max' => 28,
                        'stepSize' => 1,
                        'callback' => '__FUNC__function(value) { return Number.isInteger(value) ? value : ""; }__ENDFUNC__'
                    ];
                }


                if ($edad >= 0 && $edad <= 24 && $sexo == "M") {
                    // PESO PARA LA EDAD 0 A 2 AÑOS (NIÑOS)
                    $longitudes = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24];

                    $pesosZ2 = [4.4, 5.7, 7.0, 7.9, 8.65, 9.25, 9.75, 10.25, 10.65, 10.98, 11.35, 11.68, 11.99, 12.29, 12.58, 12.86, 13.14, 13.42, 13.68, 13.94, 14.2, 14.46, 14.72, 15.0, 15.3];
                    $pesosZ1 = [3.9, 5.0, 6.2, 7.1, 7.75, 8.35, 8.78, 9.18, 9.58, 9.88, 10.18, 10.48, 10.78, 11.04, 11.29, 11.53, 11.77, 12.02, 12.25, 12.49, 12.72, 12.95, 13.19, 13.4, 13.6];
                    $pesosZ0 = [3.3, 4.4, 5.5, 6.3, 6.95, 7.45, 7.88, 8.28, 8.59, 8.88, 9.17, 9.4, 9.63, 9.88, 10.12, 10.34, 10.56, 10.78, 10.99, 11.2, 11.41, 11.63, 11.81, 12.0, 12.2];
                    $pesosZ_1 = [2.9, 3.8, 4.8, 5.6, 6.15, 6.65, 7.05, 7.38, 7.69, 7.98, 8.24, 8.46, 8.68, 8.9, 9.1, 9.3, 9.5, 9.7, 9.9, 10.08, 10.25, 10.43, 10.58, 10.7, 10.8];
                    $pesosZ_2 = [2.5, 3.3, 4.2, 4.9, 5.55, 5.98, 6.38, 6.68, 6.95, 7.18, 7.42, 7.64, 7.8, 7.98, 8.16, 8.32, 8.48, 8.65, 8.84, 9.02, 9.18, 9.35, 9.5, 9.6, 9.7];
                }

                if ($edad >= 24 && $edad <= 60 && $sexo == "M") {
                    // PESO PARA LA EDAD 2 A 5 AÑOS (NIÑOS)

                    $longitudes = [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60];

                    $pesosZ2 = [15.3, 15.53, 15.8, 16.03, 16.33, 16.6, 16.87, 17.13, 17.4, 17.6, 17.83, 18.07, 18.33, 18.57, 18.8, 19.03, 19.28, 19.5, 19.73, 19.97, 20.23, 20.47, 20.7, 20.93, 21.2, 21.43, 21.7, 21.93, 22.2, 22.43, 22.7, 22.93, 23.2, 23.43, 23.7, 23.93, 24.2];
                    $pesosZ1 = [13.6, 13.87, 14.1, 14.3, 14.53, 14.77, 15.0, 15.2, 15.4, 15.6, 15.8, 16.0, 16.2, 16.4, 16.6, 16.8, 17.0, 17.2, 17.4, 17.6, 17.8, 18.0, 18.2, 18.4, 18.6, 18.8, 19.0, 19.2, 19.4, 19.6, 19.8, 20.0, 20.2, 20.4, 20.6, 20.8, 21.0];
                    $pesosZ0 = [12.2, 12.37, 12.53, 12.7, 12.9, 13.1, 13.3, 13.5, 13.67, 13.83, 14.0, 14.17, 14.33, 14.5, 14.67, 14.83, 15.0, 15.17, 15.33, 15.5, 15.67, 15.83, 16.0, 16.17, 16.33, 16.5, 16.67, 16.83, 17.0, 17.17, 17.33, 17.5, 17.67, 17.83, 18.0, 18.17, 18.3];
                    $pesosZ_1 = [10.8, 11.0, 11.17, 11.37, 11.5, 11.67, 11.83, 12.0, 12.13, 12.27, 12.4, 12.57, 12.73, 12.87, 13.03, 13.13, 13.27, 13.43, 13.6, 13.7, 13.83, 13.97, 14.13, 14.27, 14.43, 14.53, 14.67, 14.83, 14.97, 15.1, 15.23, 15.37, 15.5, 15.63, 15.77, 15.9, 16.0];
                    $pesosZ_2 = [9.7, 9.83, 9.97, 10.1, 10.23, 10.4, 10.53, 10.67, 10.8, 10.9, 11.07, 11.17, 11.3, 11.4, 11.5, 11.63, 11.77, 11.9, 12.0, 12.1, 12.23, 12.37, 12.5, 12.6, 12.7, 12.8, 12.93, 13.07, 13.2, 13.3, 13.4, 13.5, 13.6, 13.7, 13.8, 13.9, 14.1];
                }

                if ($edad >= 0 && $edad <= 24 && $sexo == "F") {
                    // PESO PARA LA EDAD 0 A 2 AÑOS (NIÑAS)

                    $longitudes = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24];

                    $pesosZ2 = [4.2, 5.5, 6.74, 7.64, 8.32, 8.92, 9.46, 9.98, 10.38, 10.74, 11.08, 11.38, 11.66, 11.94, 12.22, 12.48, 12.74, 13.02, 13.3, 13.58, 13.86, 14.14, 14.42, 14.63, 14.8];
                    $pesosZ1 = [3.7, 4.8, 5.92, 6.76, 7.42, 7.96, 8.4, 8.8, 9.16, 9.48, 9.78, 10.06, 10.32, 10.58, 10.82, 11.06, 11.3, 11.54, 11.78, 12.02, 12.26, 12.48, 12.70, 12.87, 13.0];
                    $pesosZ0 = [3.2, 4.2, 5.24, 5.98, 6.56, 7.04, 7.42, 7.74, 8.02, 8.28, 8.54, 8.78, 9.02, 9.26, 9.48, 9.7, 9.92, 10.14, 10.36, 10.58, 10.82, 11.06, 11.24, 11.40, 11.5];
                    $pesosZ_1 = [2.8, 3.6, 4.62, 5.34, 5.86, 6.28, 6.64, 6.94, 7.18, 7.44, 7.66, 7.86, 8.06, 8.26, 8.46, 8.66, 8.86, 9.04, 9.22, 9.38, 9.56, 9.76, 9.96, 10.1, 10.2];
                    $pesosZ_2 = [2.4, 3.2, 4.02, 4.64, 5.14, 5.54, 5.86, 6.16, 6.42, 6.64, 6.84, 7.02, 7.18, 7.36, 7.54, 7.7, 7.86, 8.02, 8.18, 8.34, 8.5, 8.66, 8.8, 8.94, 9.0];
                }

                if ($edad >= 24 && $edad <= 60 && $sexo == "F") {
                    // PESO PARA LA EDAD 2 A 5 AÑOS (NIÑAS)

                    $longitudes = [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60];

                    $pesosZ2 = [14.8, 15.1, 15.4, 15.7, 15.97, 16.23, 16.5, 16.8, 17.07, 17.33, 17.6, 17.87, 18.13, 18.4, 18.7, 18.97, 19.23, 19.5, 19.8, 20.1, 20.4, 20.67, 20.93, 21.2, 21.5, 21.8, 22.1, 22.37, 22.63, 22.9, 23.2, 23.5, 23.8, 24.1, 24.37, 24.63, 24.9];
                    $pesosZ1 = [13.0, 13.27, 13.5, 13.73, 13.97, 14.2, 14.43, 14.67, 14.9, 15.13, 15.37, 15.6, 15.8, 16.03, 16.27, 16.5, 16.7, 16.93, 17.17, 17.4, 17.6, 17.83, 18.07, 18.3, 18.53, 18.77, 19.0, 19.2, 19.43, 19.67, 19.9, 20.1, 20.33, 20.57, 20.8, 21.0, 21.2];
                    $pesosZ0 = [11.5, 11.7, 11.9, 12.1, 12.3, 12.5, 12.7, 12.9, 13.1, 13.3, 13.5, 13.7, 13.87, 14.07, 14.25, 14.4, 14.6, 14.8, 15.0, 15.17, 15.33, 15.5, 15.7, 15.9, 16.1, 16.27, 16.43, 16.6, 16.8, 17.0, 17.17, 17.33, 17.5, 17.7, 17.87, 18.03, 18.2];
                    $pesosZ_1 = [10.2, 10.33, 10.5, 10.7, 10.9, 11.07, 11.23, 11.4, 11.57, 11.73, 11.87, 12.03, 12.2, 12.37, 12.53, 12.67, 12.83, 12.97, 13.13, 13.27, 13.43, 13.57, 13.73, 13.87, 14.03, 14.17, 14.33, 14.47, 14.63, 14.77, 14.93, 15.07, 15.2, 15.33, 15.51, 15.63, 15.8];
                    $pesosZ_2 = [9.0, 9.2, 9.37, 9.53, 9.67, 9.83, 9.97, 10.13, 10.27, 10.4, 10.53, 10.67, 10.8, 10.93, 11.07, 11.2, 11.33, 11.47, 11.6, 11.7, 11.83, 11.97, 12.1, 12.2, 12.3, 12.43, 12.57, 12.7, 12.8, 12.9, 13.07, 13.17, 13.3, 13.4, 13.5, 13.6, 13.7];
                }
                $bandasZ = [
                    '+2' => $pesosZ2,
                    '+1' => $pesosZ1,
                    '0' => $pesosZ0,
                    '-1' => $pesosZ_1,
                    '-2' => $pesosZ_2,
                ];

                function interpolarValorPt($edadPaciente, $edades, $valores)
                {
                    if (!is_array($edades) || !is_array($valores)) {
                        throw new InvalidArgumentException('Se esperaban arrays');
                    }

                    $n = count($edades);

                    if ($edadPaciente <= $edades[0]) return $valores[0];
                    if ($edadPaciente >= $edades[$n - 1]) return $valores[$n - 1];

                    for ($i = 0; $i < $n - 1; $i++) {
                        $x1 = $edades[$i];
                        $x2 = $edades[$i + 1];
                        if ($edadPaciente >= $x1 && $edadPaciente <= $x2) {
                            $y1 = $valores[$i];
                            $y2 = $valores[$i + 1];
                            return $y1 + ($y2 - $y1) * ($edadPaciente - $x1) / ($x2 - $x1);
                        }
                    }

                    return null;
                }

                function clasificarPesoEdad($edadPaciente, $pesoPaciente, $edades, $bandasZ)
                {
                    $valoresZ = [];
                    foreach ($bandasZ as $z => $valores) {
                        $valoresZ[$z] = interpolarValorPt($edadPaciente, $edades, $valores);
                    }

                    if ($pesoPaciente > $valoresZ['+2']) {
                        return "Peso Alto - >Z+2";
                    } elseif ($pesoPaciente <= $valoresZ['+2'] && $pesoPaciente > $valoresZ['+1']) {
                        return "Riesgo Sobrepeso -  <=Z+2 a >Z+1";
                    } elseif ($pesoPaciente <= $valoresZ['+1'] && $pesoPaciente > $valoresZ['-1']) {
                        return "Normal -  <=Z+1 a >Z-1";
                    } elseif ($pesoPaciente <= $valoresZ['-1'] && $pesoPaciente > $valoresZ['-2']) {
                        return "Bajo Peso - <=Z-1 a >Z-2";
                    } elseif ($pesoPaciente <= $valoresZ['-2']) {
                        return "Desnutrición - <=Z-2";
                    }

                    return "Sin Clasificación";
                }

                if ($graficaHistoria != true) {

                    $intersecciones = $datos->map(function ($item) use ($fechaNacimiento, $longitudes, $bandasZ) {
                        $nacimiento = Carbon::parse($fechaNacimiento);
                        $fechaConsulta = Carbon::createFromFormat('d/m/Y', $item['hora_fin_atendio_consulta']);
                        $edadEnMeses = $nacimiento->diffInMonths($fechaConsulta);

                        $pesoPaciente = (float) $item['peso'];

                        $clasificacion = clasificarPesoEdad(
                            $edadEnMeses,
                            $pesoPaciente,
                            $longitudes,
                            $bandasZ
                        );

                        return [
                            'x' => $edadEnMeses,
                            'y' => $pesoPaciente,
                            'fecha' => $item['hora_fin_atendio_consulta'],
                            'clasificacion' => $clasificacion,
                        ];
                    })->values()->all();
                } else {
                    $clasificacion = clasificarPesoEdad(
                        $edad,
                        $peso,
                        $longitudes,
                        $bandasZ
                    );
                    $intersecciones = $clasificacion;
                }

                $chartConfig = [
                    'type' => 'line',
                    'data' => [
                        'datasets' => [
                            [
                                'label' => 'Intersección',
                                'data' => $intersecciones,
                                'pointBackgroundColor' => 'blue',
                                'pointRadius' => 2,
                                'showLine' => true,
                                'fill' => false,
                                'borderDash' => [5, 5],
                                'datalabels' => [
                                    'display' => true,
                                    'align' => 'top',
                                    'anchor' => 'end',
                                    'color' => 'black',
                                    'rotation' => -90,
                                    'font' => [
                                        'weight' => 'bold',
                                        'size' => 10,
                                    ],
                                    'formatter' => "__FUNC__function(value) { return value.fecha; }__ENDFUNC__",

                                ],
                            ],
                            [
                                'label' => 'Z-2',
                                'data' => array_map(function ($x, $y) {
                                    return ['x' => $x, 'y' => $y];
                                }, $longitudes, $pesosZ_2),
                                'borderColor' => 'red',
                                'borderDash' => [5, 5],
                                'borderWidth' => 2,
                                'fill' => false,
                                'pointRadius' => 0
                            ],
                            [
                                'label' => 'Z-1',
                                'data' => array_map(function ($x, $y) {
                                    return ['x' => $x, 'y' => $y];
                                }, $longitudes, $pesosZ_1),
                                'borderColor' => 'orange',
                                'borderWidth' => 2,
                                'fill' => false,
                                'pointRadius' => 0
                            ],
                            [
                                'label' => 'Z0',
                                'data' => array_map(function ($x, $y) {
                                    return ['x' => $x, 'y' => $y];
                                }, $longitudes, $pesosZ0),
                                'borderColor' => 'green',
                                'borderWidth' => 2,
                                'fill' => false,
                                'pointRadius' => 0
                            ],
                            [
                                'label' => 'Z-1',
                                'data' => array_map(function ($x, $y) {
                                    return ['x' => $x, 'y' => $y];
                                }, $longitudes, $pesosZ1),
                                'borderColor' => '#001256',
                                'borderWidth' => 2,
                                'fill' => false,
                                'pointRadius' => 0
                            ],
                            [
                                'label' => 'Z-2',
                                'data' => array_map(function ($x, $y) {
                                    return ['x' => $x, 'y' => $y];
                                }, $longitudes, $pesosZ2),
                                'borderColor' => '#001256',
                                'borderWidth' => 2,
                                'fill' => false,
                                'pointRadius' => 0
                            ],
                        ]
                    ],
                    'options' => [
                        'title' => [
                            'display' => true,
                            'text' => 'Curvas de crecimiento: Peso para la edad',
                        ],
                        'legend' => [
                            'display' => false,
                        ],
                        'scales' => [
                            'xAxes' => [[
                                'type' => 'linear',
                                'position' => 'bottom',
                                'scaleLabel' => [
                                    'display' => true,
                                    'labelString' => 'Edad en meses'
                                ],
                                'ticks' => $ticksX,
                                'gridLines' => [
                                    'drawTicks' => true,
                                    'color' => 'rgba(0, 0, 0, 0.1)',
                                    'lineWidth' => 0.5
                                ]
                            ]],
                            'yAxes' => [[
                                'scaleLabel' => [
                                    'display' => true,
                                    'labelString' => 'Peso (kg)'
                                ],
                                'ticks' => $ticksY,
                                'gridLines' => [
                                    'drawTicks' => true,
                                    'color' => 'rgba(0, 0, 0, 0.1)',
                                    'lineWidth' => 0.5
                                ]
                            ]]
                        ]
                    ]
                ];
                $nombreImagen = 'graficaPesoEdad.png';
                if ($graficaHistoria == false) {
                    $this->generarPdfDesdeGrafica($chartConfig, $nombreImagen);
                }
                return $intersecciones;
            }
        }
    }
}
